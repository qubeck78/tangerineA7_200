{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"text",
				"textureBuffer"
			],
			[
				"te",
				"textureBuffer"
			],
			[
				"cpu",
				"cpurv"
			],
			[
				"tgc",
				"tgctx"
			],
			[
				"re",
				"responseMaxIdx"
			],
			[
				"res",
				"responseIdx"
			],
			[
				"respon",
				"responseMaxIdx"
			],
			[
				"c",
				"cmd"
			],
			[
				"sdc",
				"sdcsCMD1"
			],
			[
				"sdcs",
				"sdcsCMD0"
			],
			[
				"sp",
				"spiStatus"
			],
			[
				"ar",
				"argv"
			],
			[
				"emu",
				"emulator"
			],
			[
				"vi",
				"videoVSync"
			],
			[
				"ch3Dma",
				"ch3DmaPointerStart"
			],
			[
				"sd",
				"sdramDMAReadReg"
			],
			[
				"fe",
				"fetchData"
			],
			[
				"r",
				"rootRegs"
			],
			[
				"RV",
				"RV_ERROR"
			],
			[
				"num",
				"numDirEntries"
			]
		]
	},
	"buffers":
	[
		{
			"file": "tangerineA7_200.srcs/sources_1/new/blitter.vhd",
			"settings":
			{
				"buffer_size": 37006,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					34,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA9XAAAAAAAA9FYAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAACPkAAALS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQotLSBDb21wYW55OiAKLS0gRW5naW5lZXI6IAotLSAKLS0gQ3JlYXRlIERhdGU6IDA4LzIzLzIwMjQgMDE6NTU6MjQgUE0KLS0gRGVzaWduIE5hbWU6IAotLSBNb2R1bGUgTmFtZTogYmxpdHRlciAtIEJlaGF2aW9yYWwKLS0gUHJvamVjdCBOYW1lOiAKLS0gVGFyZ2V0IERldmljZXM6IAotLSBUb29sIFZlcnNpb25zOiAKLS0gRGVzY3JpcHRpb246IAotLSAKLS0gRGVwZW5kZW5jaWVzOiAKLS0gCi0tIFJldmlzaW9uOgotLSBSZXZpc2lvbiAwLjAxIC0gRmlsZSBDcmVhdGVkCi0tIEFkZGl0aW9uYWwgQ29tbWVudHM6Ci0tIAotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoKbGlicmFyeSBJRUVFOwp1c2UgSUVFRS5TVERfTE9HSUNfMTE2NC5BTEw7CnVzZSBJRUVFLk5VTUVSSUNfU1RELkFMTDsKCmxpYnJhcnkgVU5JU0lNOwp1c2UgVU5JU0lNLlZDb21wb25lbnRzLmFsbDsKCmVudGl0eSBibGl0dGVyIGlzCnBvcnQoIAogICAgCiAgICAtLXJlc2V0LCBjbG9ja3MKCiAgICByZXNldDogICAgICAgICAgaW4gICAgICBzdGRfbG9naWM7CiAgICBjbG9jazogICAgICAgICAgaW4gICAgICBzdGRfbG9naWM7CgogICAtLWJ1cyBpbnRlcmZhY2UgKCByZWdpc3RlcnMgKQoKICAgIGE6ICAgICAgICAgICAgICAgICAgaW4gICAgICBzdGRfbG9naWNfdmVjdG9yKCAxNSBkb3dudG8gMCApOwogICAgZGluOiAgICAgICAgICAgICAgICBpbiAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDMxIGRvd250byAwICk7CiAgICBkb3V0OiAgICAgICAgICAgICAgIG91dCAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKICAgIGNlOiAgICAgICAgICAgICAgICAgaW4gICAgICBzdGRfbG9naWM7CiAgICB3cjogICAgICAgICAgICAgICAgIGluICAgICAgc3RkX2xvZ2ljOwogICAgZGF0YU1hc2s6ICAgICAgICAgICBpbiAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDMgZG93bnRvIDAgKTsKICAgIHJlYWR5OiAgICAgICAgICAgICAgb3V0ICAgICBzdGRfbG9naWM7CgogICAgLS1kbWEgaW50ZXJmYWNlCiAgICAKICAgIGJsdERtYVJlcXVlc3Q6ICAgICAgb3V0ICAgICBzdGRfbG9naWM7CiAgICBibHREbWFSZWFkeTogICAgICAgIGluICAgICAgc3RkX2xvZ2ljOwogICAgYmx0RG1hV29yZFNpemU6ICAgICBvdXQgICAgIHN0ZF9sb2dpYzsKICAgIGJsdEE6ICAgICAgICAgICAgICAgb3V0ICAgICBzdGRfbG9naWNfdmVjdG9yKCAyNCBkb3dudG8gMCApOwogICAgYmx0RGluOiAgICAgICAgICAgICBpbiAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDMxIGRvd250byAwICk7CiAgICBibHREb3V0OiAgICAgICAgICAgIG91dCAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKICAgIGJsdFdyOiAgICAgICAgICAgICAgb3V0ICAgICBzdGRfbG9naWMKICAgIAopOwplbmQgYmxpdHRlcjsKCmFyY2hpdGVjdHVyZSBCZWhhdmlvcmFsIG9mIGJsaXR0ZXIgaXMKCi0tY29tcG9uZW50cwoKLS0gcGl4ZWwgYWxwaGEgY2hhbm5lbCBjYWxjdWxhdG9yCgpjb21wb25lbnQgcGl4ZWxBbHBoYSBpcwpwb3J0KAoKICAgIHJlc2V0OiAgICAgIGluICBzdGRfbG9naWM7CiAgICBjbG9jazogICAgICBpbiAgc3RkX2xvZ2ljOwoJIAkgCiAgICBjb2xvckluQTogICBpbiAgc3RkX2xvZ2ljX3ZlY3RvciggMTUgZG93bnRvIDAgKTsKICAgIGNvbG9ySW5COiAgIGluICBzdGRfbG9naWNfdmVjdG9yKCAxNSBkb3dudG8gMCApOwogICAgYWxwaGE6ICAgICAgaW4gIHN0ZF9sb2dpY192ZWN0b3IoIDQgZG93bnRvIDAgKTsKICAgIGNvbG9yT3V0OiAgIG91dCBzdGRfbG9naWNfdmVjdG9yKCAxNSBkb3dudG8gMCApCgopOwplbmQgY29tcG9uZW50OwoKCi0tc2lnbmFscwoKLS1yZWdpc3RlcnMgc2lnbmFscwoKdHlwZSByZWdTdGF0ZV9UIGlzICggcnNXYWl0Rm9yUmVnQWNjZXNzLCByc1dhaXRGb3JCdXNDeWNsZUVuZCApOwpzaWduYWwgcmVnU3RhdGU6ICAgICAgICByZWdTdGF0ZV9UOwoKLS1jb21tYW5kL3N0YXR1cwoKc2lnbmFsICBjb21tYW5kUmVnOiAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKCi0tZ2VuZXJhbCBwdXJwb3NlIHJlZ2lzdGVycwoKc2lnbmFsICBpbnB1dDBSZWc6ICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKc2lnbmFsICBpbnB1dDFSZWc6ICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKc2lnbmFsICBpbnB1dDJSZWc6ICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKc2lnbmFsICBpbnB1dDNSZWc6ICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKCgotLXNvdXJjZXMKCnNpZ25hbCAgc2FBZGRyZXNzUmVnOiAgIHN0ZF9sb2dpY192ZWN0b3IoIDMxIGRvd250byAwICk7CnNpZ25hbCAgc2FSb3dXaWR0aFJlZzogIHN0ZF9sb2dpY192ZWN0b3IoIDE1IGRvd250byAwICk7CnNpZ25hbCAgc2FXaWR0aFJlZzogICAgIHN0ZF9sb2dpY192ZWN0b3IoIDE1IGRvd250byAwICk7CnNpZ25hbCAgc2FIZWlnaHRSZWc6ICAgIHN0ZF9sb2dpY192ZWN0b3IoIDE1IGRvd250byAwICk7CgpzaWduYWwgIHNiQWRkcmVzc1JlZzogICBzdGRfbG9naWNfdmVjdG9yKCAzMSBkb3dudG8gMCApOwpzaWduYWwgIHNiUm93V2lkdGhSZWc6ICBzdGRfbG9naWNfdmVjdG9yKCAxNSBkb3dudG8gMCApOwoKc2lnbmFsICBzY0FkZHJlc3NSZWc6ICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKc2lnbmFsICBzY1Jvd1dpZHRoUmVnOiAgc3RkX2xvZ2ljX3ZlY3RvciggMTUgZG93bnRvIDAgKTsKCi0tZGVzdGluYXRpb25zCgpzaWduYWwgIGRhQWRkcmVzc1JlZzogICBzdGRfbG9naWNfdmVjdG9yKCAzMSBkb3dudG8gMCApOwpzaWduYWwgIGRhUm93V2lkdGhSZWc6ICBzdGRfbG9naWNfdmVjdG9yKCAxNSBkb3dudG8gMCApOwpzaWduYWwgIGRhV2lkdGhSZWc6ICAgICBzdGRfbG9naWNfdmVjdG9yKCAxNSBkb3dudG8gMCApOwpzaWduYWwgIGRhSGVpZ2h0UmVnOiAgICBzdGRfbG9naWNfdmVjdG9yKCAxNSBkb3dudG8gMCApOwoKc2lnbmFsICBkYkFkZHJlc3NSZWc6ICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKc2lnbmFsICBkYlJvd1dpZHRoUmVnOiAgc3RkX2xvZ2ljX3ZlY3RvciggMTUgZG93bnRvIDAgKTsKCi0tY2FsY3VsYXRlZCByZWdpc3RlcnMKCnNpZ25hbCAgc2FDb2xBZGQ6ICAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDE1IGRvd250byAwICk7CnNpZ25hbCAgc2JDb2xBZGQ6ICAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDE1IGRvd250byAwICk7CnNpZ25hbCAgc2NDb2xBZGQ6ICAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDE1IGRvd250byAwICk7CnNpZ25hbCAgZGFDb2xBZGQ6ICAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDE1IGRvd250byAwICk7CnNpZ25hbCAgZGJDb2xBZGQ6ICAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDE1IGRvd250byAwICk7CgotLWZzbQoKdHlwZSAgICBibHRTdGF0ZV90IGlzICggYnNJZGxlLCAKICAgICAgICAgICAgICAgICAgICAgICAgYnNGaWxsMCwgYnNGaWxsMSwKICAgICAgICAgICAgICAgICAgICAgICAgYnNDb3B5MCwgYnNDb3B5MSwgYnNDb3B5MiwgCiAgICAgICAgICAgICAgICAgICAgICAgIGJzQWxwaGFDb3B5MCwgYnNBbHBoYUNvcHkxLCBic0FscGhhQ29weTIsIGJzQWxwaGFDb3B5MywgYnNBbHBoYUNvcHk0LCBic0FscGhhQ29weTUsICAKICAgICAgICAgICAgICAgICAgICAgICAgYnNTY2FsZUNvcHkwLCBic1NjYWxlQ29weTEsIGJzU2NhbGVDb3B5MiwgYnNTY2FsZUNvcHkzLCBic1NjYWxlQ29weTQsIGJzU2NhbGVDb3B5NSwKICAgICAgICAgICAgICAgICAgICAgICAgYnNTdWJSZWFkMCwgYnNTdWJSZWFkMSwgYnNTdWJSZWFkMiwgYnNTdWJXcml0ZTAsIGJzU3ViV3JpdGUxLCBic1N1YldyaXRlMiwgYnNTdWJXcml0ZTMgKTsKCnNpZ25hbCAgYmx0U3RhdGU6ICAgICAgIGJsdFN0YXRlX3Q7CnNpZ25hbCAgYmx0UmV0dXJuU3RhdGU6IGJsdFN0YXRlX3Q7CgotLWJsaXR0ZXIgY29tbWFuZCB0cmlnZ2VyCgpzaWduYWwgIGJsdFJ1bjogICAgICAgICBzdGRfbG9naWM7CnNpZ25hbCAgYmx0UmVhZHk6ICAgICAgIHN0ZF9sb2dpYzsKCi0tc3ViUmVhZApzaWduYWwgZG1hUmVhZEFkZHI6ICAgICBzdGRfbG9naWNfdmVjdG9yKCAyNCBkb3dudG8gMCApOwpzaWduYWwgZG1hUmVhZERhdGE6ICAgICBzdGRfbG9naWNfdmVjdG9yKCAzMSBkb3dudG8gMCApOwoKLS1zdWJXcml0ZQpzaWduYWwgZG1hV3JpdGVBZGRyOiAgICBzdGRfbG9naWNfdmVjdG9yKCAyNCBkb3dudG8gMCApOwpzaWduYWwgZG1hV3JpdGVEYXRhOiAgICBzdGRfbG9naWNfdmVjdG9yKCAzMSBkb3dudG8gMCApOwoKCi0tY291bnRlcnMKc2lnbmFsIGNvdW50ZXJYOiAgICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMTUgZG93bnRvIDAgKTsKc2lnbmFsIGNvdW50ZXJYTWF4OiAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMTUgZG93bnRvIDAgKTsKc2lnbmFsIGNvdW50ZXJZOiAgICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMTUgZG93bnRvIDAgKTsKCi0tZGF0YSBwb2ludGVycyAoIGZvciBtdWx0aXBsZSBzb3VyY2UgLyBkZXN0aW5hdGlvbiBtb2RlcyApCnNpZ25hbCBkcFNhOiAgICAgICAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDI0IGRvd250byAwICk7CnNpZ25hbCBkcFNiOiAgICAgICAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDI0IGRvd250byAwICk7CnNpZ25hbCBkcFNjOiAgICAgICAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDI0IGRvd250byAwICk7CnNpZ25hbCBkcERhOiAgICAgICAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDI0IGRvd250byAwICk7CnNpZ25hbCBkcERiOiAgICAgICAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDI0IGRvd250byAwICk7CgoKLS1waXhlbCBhbHBoYQpzaWduYWwgcGFDb2xvckluQTogICAgICBzdGRfbG9naWNfdmVjdG9yKCAxNSBkb3dudG8gMCApOwpzaWduYWwgcGFDb2xvckluQjogICAgICBzdGRfbG9naWNfdmVjdG9yKCAxNSBkb3dudG8gMCApOwpzaWduYWwgcGFBbHBoYTogICAgICAgICBzdGRfbG9naWNfdmVjdG9yKCA0IGRvd250byAwICk7CnNpZ25hbCBwYUNvbG9yT3V0OiAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDE1IGRvd250byAwICk7CgoKLS1zY2FsZXIKc2lnbmFsIHNjU3g6ICAgICAgICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKc2lnbmFsIHNjU3k6ICAgICAgICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKCmJlZ2luICAKICAgICAgICAKIApyZWdpc3RlcnM6IHByb2Nlc3MoIGFsbCApCgpiZWdpbgoKICAgICAKICAgIGlmIHJlc2V0ID0gJzEnIHRoZW4KCiAgICAgICAgLS1jcHUgYnVzCiAgICAgICAgcmVhZHkgICAgICAgICAgIDw9ICcwJzsgIAogICAgICAgICAgICAgICAgICAgCiAgICAgICAgLS1jbGVhciByZWdpc3RlcnMKICAgICAgICBjb21tYW5kUmVnICAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgaW5wdXQwUmVnICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIGlucHV0MVJlZyAgICAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICBpbnB1dDJSZWcgICAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgaW5wdXQzUmVnICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIHNhQWRkcmVzc1JlZyAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICBzYVJvd1dpZHRoUmVnICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgc2FXaWR0aFJlZyAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIHNhSGVpZ2h0UmVnICAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICBzYkFkZHJlc3NSZWcgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgc2JSb3dXaWR0aFJlZyAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIHNjQWRkcmVzc1JlZyAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICBzY1Jvd1dpZHRoUmVnICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgZGFBZGRyZXNzUmVnICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIGRhUm93V2lkdGhSZWcgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICBkYVdpZHRoUmVnICAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgZGFIZWlnaHRSZWcgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIGRiQWRkcmVzc1JlZyAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICBkYlJvd1dpZHRoUmVnICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgCiAgICAgICAgLS1jbGVhciBjb21tYW5kIHRyaWdnZXIKICAgICAgICAKICAgICAgICBibHRSdW4gICAgICAgICAgPD0gJzAnOwogICAgICAgIAogICAgZWxzaWYgcmlzaW5nX2VkZ2UoIGNsb2NrICkgdGhlbgogICAgICAKICAgICAgICAtLWNsZWFyIGNvbW1hbmQgdHJpZ2dlcgogICAgICAgIAogICAgICAgIGJsdFJ1biAgICAgICAgICA8PSAnMCc7CgogICAgICAgIGNhc2UgcmVnU3RhdGUgaXMKICAKICAgICAgICAgICAgd2hlbiByc1dhaXRGb3JSZWdBY2Nlc3MgPT4KICAgICAgICAKICAgICAgICAgICAgICAgIGlmIGNlID0gJzEnIHRoZW4KICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLWNwdSB3YW50cyB0byBhY2Nlc3MgcmVnaXN0ZXJzCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgcmVhZHkgPD0gJzAnOwogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGNhc2UgYSggNyBkb3dudG8gMCApIGlzCiAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIC0tMHgwMCByLSBpZCAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjAwIiA9PgogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZHkgICA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91dCAgICA8PSB4IjgwMDAwMDA1IjsgICAtLSBibGl0dGVyIGlkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgLS0weDA0IHItIGNvbXBvbmVudCB2ZXJzaW9uICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjAxIiA9PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWR5ICAgPD0gJzEnOwogICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91dCAgICA8PSB4IjIwMjQwOTE4IjsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgLS0weDA4IHJ3IGNvbW1hbmRSZWcKICAgICAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjAyIiA9PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWR5ICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3V0ICAgIDw9IHgiMDAwMDAwMCIgJiAiMDAwIiAmIGJsdFJlYWR5OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiB3ciA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21tYW5kUmVnICAgIDw9IGRpbjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXNldCBjb21tYW5kIHRyaWdnZXIKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBibHRSdW4gICAgICAgICAgPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKCiAgICAgICAgICAgICAgICAgICAgICAgIC0tMHgwYyBydyBpbnB1dDBSZWcKICAgICAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjAzIiA9PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWR5ICAgPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdXQgICAgPD0gaW5wdXQwUmVnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiB3ciA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDBSZWcgICA8PSBkaW47CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgaWY7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgLS0weDEwIHJ3IGlucHV0MVJlZwogICAgICAgICAgICAgICAgICAgICAgICB3aGVuIHgiMDQiID0+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZHkgICA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91dCAgICA8PSBpbnB1dDFSZWc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHdyID0gJzEnIHRoZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0MVJlZyAgIDw9IGRpbjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKCiAgICAgICAgICAgICAgICAgICAgICAgIC0tMHgxNCBydyBpbnB1dDJSZWcKICAgICAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjA1IiA9PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWR5ICAgPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdXQgICAgPD0gaW5wdXQyUmVnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiB3ciA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDJSZWcgICA8PSBkaW47CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgaWY7CgogICAgICAgICAgICAgICAgICAgICAgICAtLTB4MTggcncgaW5wdXQzUmVnCiAgICAgICAgICAgICAgICAgICAgICAgIHdoZW4geCIwNiIgPT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkeSAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3V0ICAgIDw9IGlucHV0M1JlZzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgd3IgPSAnMScgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQzUmVnICAgPD0gZGluOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kIGlmOwoKICAgICAgICAgICAgICAgICAgICAgICAgLS0weDFjIHJ3IHNhQWRkcmVzc1JlZwogICAgICAgICAgICAgICAgICAgICAgICB3aGVuIHgiMDciID0+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZHkgICA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91dCAgICA8PSBzYUFkZHJlc3NSZWc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgd3IgPSAnMScgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2FBZGRyZXNzUmVnICAgIDw9IGRpbjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAtLTB4MjAgcncgc2FSb3dXaWR0aFJlZwogICAgICAgICAgICAgICAgICAgICAgICB3aGVuIHgiMDgiID0+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZHkgICA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91dCAgICA8PSB4IjAwMDAiICYgc2FSb3dXaWR0aFJlZzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiB3ciA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYVJvd1dpZHRoUmVnICAgIDw9IGRpbiggMTUgZG93bnRvIDAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKCiAgICAgICAgICAgICAgICAgICAgICAgIC0tMHgyNCBydyBzYVdpZHRoUmVnCiAgICAgICAgICAgICAgICAgICAgICAgIHdoZW4geCIwOSIgPT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkeSAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3V0ICAgIDw9IHgiMDAwMCIgJiBzYVdpZHRoUmVnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHdyID0gJzEnIHRoZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhV2lkdGhSZWcgICAgPD0gZGluKCAxNSBkb3dudG8gMCApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kIGlmOwoKICAgICAgICAgICAgICAgICAgICAgICAgLS0weDI4IHJ3IHNhSGVpZ2h0UmVnCiAgICAgICAgICAgICAgICAgICAgICAgIHdoZW4geCIwYSIgPT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkeSAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3V0ICAgIDw9IHgiMDAwMCIgJiBzYUhlaWdodFJlZzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiB3ciA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzYUhlaWdodFJlZyAgICA8PSBkaW4oIDE1IGRvd250byAwICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgaWY7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgLS0weDJjIHJ3IHNiQWRkcmVzc1JlZwogICAgICAgICAgICAgICAgICAgICAgICB3aGVuIHgiMGIiID0+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZHkgICA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91dCAgICA8PSBzYkFkZHJlc3NSZWc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgd3IgPSAnMScgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2JBZGRyZXNzUmVnICAgIDw9IGRpbjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKCiAgICAgICAgICAgICAgICAgICAgICAgIC0tMHgzMCBydyBzYlJvd1dpZHRoUmVnCiAgICAgICAgICAgICAgICAgICAgICAgIHdoZW4geCIwYyIgPT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkeSAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3V0ICAgIDw9IHgiMDAwMCIgJiBzYlJvd1dpZHRoUmVnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHdyID0gJzEnIHRoZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNiUm93V2lkdGhSZWcgICAgPD0gZGluKCAxNSBkb3dudG8gMCApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kIGlmOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIC0tMHgzNCBydyBzY0FkZHJlc3NSZWcKICAgICAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjBkIiA9PgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWR5ICAgPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdXQgICAgPD0gc2NBZGRyZXNzUmVnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgd3IgPSAnMScgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NBZGRyZXNzUmVnICAgIDw9IGRpbjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKCiAgICAgICAgICAgICAgICAgICAgICAgIC0tMHgzOCBydyBzY1Jvd1dpZHRoUmVnCiAgICAgICAgICAgICAgICAgICAgICAgIHdoZW4geCIwZSIgPT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkeSAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3V0ICAgIDw9IHgiMDAwMCIgJiBzY1Jvd1dpZHRoUmVnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgd3IgPSAnMScgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NSb3dXaWR0aFJlZyAgICA8PSBkaW4oIDE1IGRvd250byAwICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgaWY7CgogICAgICAgICAgICAgICAgICAgICAgICAtLTB4M2MgcncgZGFBZGRyZXNzUmVnCiAgICAgICAgICAgICAgICAgICAgICAgIHdoZW4geCIwZiIgPT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkeSAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3V0ICAgIDw9IGRhQWRkcmVzc1JlZzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgd3IgPSAnMScgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGFBZGRyZXNzUmVnICAgIDw9IGRpbjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKCiAgICAgICAgICAgICAgICAgICAgICAgIC0tMHg0MCBydyBkYVJvd1dpZHRoUmVnCiAgICAgICAgICAgICAgICAgICAgICAgIHdoZW4geCIxMCIgPT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3V0ICAgIDw9IHgiMDAwMCIgJiBkYVJvd1dpZHRoUmVnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkeSAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgd3IgPSAnMScgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGFSb3dXaWR0aFJlZyAgICA8PSBkaW4oIDE1IGRvd250byAwICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgaWY7CgogICAgICAgICAgICAgICAgICAgICAgICAtLTB4NDQgcncgZGFXaWR0aFJlZwogICAgICAgICAgICAgICAgICAgICAgICB3aGVuIHgiMTEiID0+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZHkgICA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91dCAgICA8PSB4IjAwMDAiICYgZGFXaWR0aFJlZzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHdyID0gJzEnIHRoZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhV2lkdGhSZWcgICAgPD0gZGluKCAxNSBkb3dudG8gMCApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kIGlmOwoKICAgICAgICAgICAgICAgICAgICAgICAgLS0weDQ4IHJ3IGRhSGVpZ2h0UmVnCiAgICAgICAgICAgICAgICAgICAgICAgIHdoZW4geCIxMiIgPT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkeSAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3V0ICAgIDw9IHgiMDAwMCIgJiBkYUhlaWdodFJlZzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIHdyID0gJzEnIHRoZW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhSGVpZ2h0UmVnICAgIDw9IGRpbiggMTUgZG93bnRvIDAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKCiAgICAgICAgICAgICAgICAgICAgICAgIC0tMHg0YyBydyBkYUhlaWdodFJlZwogICAgICAgICAgICAgICAgICAgICAgICB3aGVuIHgiMTMiID0+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVhZHkgICA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG91dCAgICA8PSBkYkFkZHJlc3NSZWc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiB3ciA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYkFkZHJlc3NSZWcgICAgPD0gZGluOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kIGlmOwoKICAgICAgICAgICAgICAgICAgICAgICAgLS0weDUwIHJ3IGRiUm93V2lkdGhSZWcKICAgICAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjE0IiA9PgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWR5ICAgPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvdXQgICAgPD0geCIwMDAwIiAmIGRiUm93V2lkdGhSZWc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiB3ciA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYlJvd1dpZHRoUmVnICAgIDw9IGRpbiggMTUgZG93bnRvIDAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgIHdoZW4gb3RoZXJzID0+CiAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkeSA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBlbmQgY2FzZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICByZWdTdGF0ZSA8PSByc1dhaXRGb3JCdXNDeWNsZUVuZDsKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGVuZCBpZjsgLS0gY2UgPSAnMSc7CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIHdoZW4gcnNXYWl0Rm9yQnVzQ3ljbGVFbmQgPT4KICAgICAgICAgICAKICAgICAgICAgICAgICAgIC0td2FpdCBmb3IgYnVzIGN5Y2xlIHRvIGVuZAogICAgICAgICAgICAgICAgaWYgY2UgPSAnMCcgdGhlbgogICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHJlZ1N0YXRlIDw9IHJzV2FpdEZvclJlZ0FjY2VzczsKICAgICAgICAgICAgICAgICAgICByZWFkeSA8PSAnMCc7CiAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBlbmQgaWY7CiAgICAgICAgICAgICAgCiAgICAgICAgICAgIHdoZW4gb3RoZXJzID0+CiAgICAgICAgICAgCiAgICAgICAgICAgICAgICByZWdTdGF0ZSA8PSByc1dhaXRGb3JSZWdBY2Nlc3M7CiAgICAgICAgICAgICAgCiAgICAgICAgZW5kIGNhc2U7IC0tcmVnU3RhdGUgaXMKCiAgICBlbmQgaWY7IC0tcmVzZXQgPSAnMScsIHJpc2luZ19lZGdlKCBjbG9jayApCiAgICAgICAgIAplbmQgcHJvY2VzczsKCgpibGl0dGVyTWFpbjogcHJvY2VzcyggYWxsICkKCnZhcmlhYmxlIHNjUm93QWRkcmVzc1Zhcjogc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKCmJlZ2luCgogICAgaWYgcmVzZXQgPSAnMScgdGhlbgoKICAgICAgICAtLWZzbQogICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic0lkbGU7CiAgICAgICAgYmx0UmV0dXJuU3RhdGUgIDw9IGJzSWRsZTsKICAgICAgICBibHRSZWFkeSAgICAgICAgPD0gJzAnOwoKICAgICAgICAtLWRtYSAgICAKICAgICAgICBibHREbWFSZXF1ZXN0ICAgPD0gJzAnOwogICAgICAgIGJsdERtYVdvcmRTaXplICA8PSAnMCc7CiAgICAgICAgYmx0QSAgICAgICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIGJsdERvdXQgICAgICAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICBibHRXciAgICAgICAgICAgPD0gJzAnOyAgICAgICAgICAgIAoKICAgICAgICAtLXN1YlJlYWQKICAgICAgICBkbWFSZWFkQWRkciAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgZG1hUmVhZERhdGEgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIAogICAgICAgIC0tc3ViV3JpdGUKICAgICAgICBkbWFXcml0ZUFkZHIgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgZG1hV3JpdGVEYXRhICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwoKICAgICAgICAtLWNvdW50ZXJzCiAgICAgICAgY291bnRlclggICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIGNvdW50ZXJYTWF4ICAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICBjb3VudGVyWSAgICAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CgogICAgICAgIC0tZGF0YSBwb2ludGVycyAoIGZvciBtdWx0aXBsZSBzb3VyY2UgLyBkZXN0aW5hdGlvbiBtb2RlcyApCiAgICAgICAgZHBTYSAgICAgICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIGRwU2IgICAgICAgICAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICBkcFNjICAgICAgICAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgZHBEYSAgICAgICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIGRwRGIgICAgICAgICAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICAgICAgCiAgICAgICAgLS1waXhlbCBhbHBoYQogICAgICAgIHBhQ29sb3JJbkEgICAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICBwYUNvbG9ySW5CICAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgcGFBbHBoYSAgICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgCiAgICBlbHNpZiByaXNpbmdfZWRnZSggY2xvY2sgKSB0aGVuCiAgICAKICAgICAgICAtLWNhbGN1bGF0ZSB0aGluZ3MgOikKICAgICAgICBzYUNvbEFkZCAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggc2FSb3dXaWR0aFJlZyApIC0gdW5zaWduZWQoIHNhV2lkdGhSZWcgKSApOwogICAgICAgIHNiQ29sQWRkICAgIDw9IHN0ZF9sb2dpY192ZWN0b3IoIHVuc2lnbmVkKCBzYlJvd1dpZHRoUmVnICkgLSB1bnNpZ25lZCggc2FXaWR0aFJlZyApICk7CiAgICAgICAgc2NDb2xBZGQgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIHNjUm93V2lkdGhSZWcgKSAtIHVuc2lnbmVkKCBzYVdpZHRoUmVnICkgKTsKICAgICAgICAKICAgICAgICBkYUNvbEFkZCAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggZGFSb3dXaWR0aFJlZyApIC0gdW5zaWduZWQoIGRhV2lkdGhSZWcgKSApOwogICAgICAgIGRiQ29sQWRkICAgIDw9IHN0ZF9sb2dpY192ZWN0b3IoIHVuc2lnbmVkKCBkYlJvd1dpZHRoUmVnICkgLSB1bnNpZ25lZCggZGFXaWR0aFJlZyApICk7CiAgICAgICAgICAgCiAgICAKICAgICAgICBjYXNlIGJsdFN0YXRlIGlzCiAgICAgICAgCiAgICAgICAgICAgIHdoZW4gYnNJZGxlID0+CiAgICAgICAgCiAgICAgICAgICAgICAgICAtLXJlYWR5LCB3YWl0aW5nIGZvciBjb21tYW5kCiAgICAgICAgICAgICAgICBibHRSZWFkeSAgICA8PSAnMSc7ICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgaWYgYmx0UnVuID0gJzEnIHRoZW4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGJsdFJlYWR5ICAgIDw9ICcwJzsgICAgCgogICAgICAgICAgICAgICAgICAgIGNhc2UgY29tbWFuZFJlZyggMTUgZG93bnRvIDggKSBpcwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgLS1maWxsIHJlY3RhbmdsZSAoIGlucHV0MFJlZyA9PiBkYSApCiAgICAgICAgICAgICAgICAgICAgICAgIHdoZW4geCIwMSIgPT4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXRyYW5zbGF0ZSBhZGRyZXNzIHRvIHdvcmQgYmFzZWQsIG9taXQgaGlnaCBhZGRyZXNzIGJpdHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRtYVdyaXRlQWRkciAgICA8PSBkYUFkZHJlc3NSZWcoIDI1IGRvd250byAxICk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLS1jYWxjIHRyYW5zZmVyIHNpemUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ZXJYTWF4ICAgICA8PSBkYVdpZHRoUmVnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRlclggICAgICAgIDw9IGRhV2lkdGhSZWc7CiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudGVyWSAgICAgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGRhSGVpZ2h0UmVnICkgLSAxICk7CiAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic0ZpbGwwOyAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIC0tY29weSByZWN0YW5nbGUgKCBzYSA9PiBkYSApCiAgICAgICAgICAgICAgICAgICAgICAgIHdoZW4geCIwMiIgPT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXRyYW5zbGF0ZSBhZGRyZXNzZXMgdG8gd29yZCBiYXNlZCwgb21pdCBoaWdoIGFkZHJlc3MgYml0cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG1hUmVhZEFkZHIgICAgIDw9IHNhQWRkcmVzc1JlZyggMjUgZG93bnRvIDEgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRtYVdyaXRlQWRkciAgICA8PSBkYUFkZHJlc3NSZWcoIDI1IGRvd250byAxICk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLS1jYWxjIHRyYW5zZmVyIHNpemUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ZXJYTWF4ICAgICA8PSBkYVdpZHRoUmVnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRlclggICAgICAgIDw9IGRhV2lkdGhSZWc7CiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudGVyWSAgICAgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGRhSGVpZ2h0UmVnICkgLSAxICk7CiAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic0NvcHkwOyAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIC0tY29weSByZWN0YW5nbGUgd2l0aCBhbHBoYSAoIHNhIGFscGhhIHNiID0+IGRhICkKICAgICAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjAzIiA9PgogICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYUFscGhhICAgICAgICAgPD0gaW5wdXQwUmVnKCA0IGRvd250byAwICk7CiAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tdHJhbnNsYXRlIGFkZHJlc3NlcyB0byB3b3JkIGJhc2VkLCBvbWl0IGhpZ2ggYWRkcmVzcyBiaXRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXVzZSBkYXRhIHBvaW50ZXJzIGZvciBzb3VyY2VzKCBtdWx0aXBsZSBzb3VyY2VzICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZHBTYSAgICAgICAgICAgIDw9IHNhQWRkcmVzc1JlZyggMjUgZG93bnRvIDEgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRwU2IgICAgICAgICAgICA8PSBzYkFkZHJlc3NSZWcoIDI1IGRvd250byAxICk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG1hV3JpdGVBZGRyICAgIDw9IGRhQWRkcmVzc1JlZyggMjUgZG93bnRvIDEgKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLWNhbGMgdHJhbnNmZXIgc2l6ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRlclhNYXggICAgIDw9IGRhV2lkdGhSZWc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudGVyWCAgICAgICAgPD0gZGFXaWR0aFJlZzsKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ZXJZICAgICAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggZGFIZWlnaHRSZWcgKSAtIDEgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzQWxwaGFDb3B5MDsgCgogICAgICAgICAgICAgICAgICAgICAgICAtLXNjYWxlIGNvcHkgcmVjdGFuZ2xlICggc2Egc2NhbGUgPT4gZGEgKQogICAgICAgICAgICAgICAgICAgICAgICAtLWlucHV0MFJlZyAtIHNvdXJjZURlbHRhWAogICAgICAgICAgICAgICAgICAgICAgICAtLWlucHV0MVJlZyAtIHNvdXJjZURlbHRhWQogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjA0IiA9PgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tdHJhbnNsYXRlIGFkZHJlc3NlcyB0byB3b3JkIGJhc2VkLCBvbWl0IGhpZ2ggYWRkcmVzcyBiaXRzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkbWFSZWFkQWRkciAgICAgPD0gc2FBZGRyZXNzUmVnKCAyNSBkb3dudG8gMSApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG1hV3JpdGVBZGRyICAgIDw9IGRhQWRkcmVzc1JlZyggMjUgZG93bnRvIDEgKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLWNhbGMgdHJhbnNmZXIgc2l6ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRlclhNYXggICAgIDw9IGRhV2lkdGhSZWc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudGVyWCAgICAgICAgPD0gZGFXaWR0aFJlZzsKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ZXJZICAgICAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggZGFIZWlnaHRSZWcgKSAtIDEgKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXJvdyBhZGRyZXNzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkcFNhICAgICAgICAgICAgPD0gc2FBZGRyZXNzUmVnKCAyNSBkb3dudG8gMSApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NTeCAgICAgICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NTeSAgICAgICAgICAgIDw9IGlucHV0MVJlZzsgICAtLWRlbHRhIHkgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic1NjYWxlQ29weTA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgd2hlbiBvdGhlcnMgPT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBlbmQgY2FzZTsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgZW5kIGlmOwogICAgICAgICAgICAgIAogICAgICAgICAgICB3aGVuIGJzRmlsbDAgPT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgZG1hV3JpdGVEYXRhICAgIDw9IGlucHV0MFJlZzsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYgY291bnRlclggLz0geCIwMDAwIiB0aGVuCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBibHRSZXR1cm5TdGF0ZSAgPD0gYnNGaWxsMTsKICAgICAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNTdWJXcml0ZTA7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLWVuZCBvZiByb3cKICAgICAgICAgICAgICAgICAgICBpZiBjb3VudGVyWSAvPSB4IjAwMDAiIHRoZW4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgY291bnRlclkgICAgICAgIDw9IHN0ZF9sb2dpY192ZWN0b3IoIHVuc2lnbmVkKCBjb3VudGVyWSApIC0gMSApOwogICAgICAgICAgICAgICAgICAgICAgICBjb3VudGVyWCAgICAgICAgPD0gY291bnRlclhNYXg7CiAgICAgICAgICAgICAgICAgICAgICAgIGRtYVdyaXRlQWRkciAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggZG1hV3JpdGVBZGRyICkgKyB1bnNpZ25lZCggZGFDb2xBZGQgKSApOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzSWRsZTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBlbmQgaWY7ICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgZW5kIGlmOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIHdoZW4gYnNGaWxsMSA9PgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIGNvdW50ZXJYICAgICAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggY291bnRlclggKSAtIDEgKTsKICAgICAgICAgICAgICAgIGRtYVdyaXRlQWRkciAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggZG1hV3JpdGVBZGRyICkgKyAxICk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic0ZpbGwwOwogICAgICAgIAogICAgICAgICAgICB3aGVuIGJzQ29weTAgPT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmIGNvdW50ZXJYIC89IHgiMDAwMCIgdGhlbgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgYmx0UmV0dXJuU3RhdGUgIDw9IGJzQ29weTE7CiAgICAgICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzU3ViUmVhZDA7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLWVuZCBvZiByb3cKICAgICAgICAgICAgICAgICAgICBpZiBjb3VudGVyWSAvPSB4IjAwMDAiIHRoZW4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgY291bnRlclkgICAgICAgIDw9IHN0ZF9sb2dpY192ZWN0b3IoIHVuc2lnbmVkKCBjb3VudGVyWSApIC0gMSApOwogICAgICAgICAgICAgICAgICAgICAgICBjb3VudGVyWCAgICAgICAgPD0gY291bnRlclhNYXg7CgogICAgICAgICAgICAgICAgICAgICAgICBkbWFSZWFkQWRkciAgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGRtYVJlYWRBZGRyICkgKyB1bnNpZ25lZCggc2FDb2xBZGQgKSApOwogICAgICAgICAgICAgICAgICAgICAgICBkbWFXcml0ZUFkZHIgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGRtYVdyaXRlQWRkciApICsgdW5zaWduZWQoIGRhQ29sQWRkICkgKTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic0lkbGU7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgZW5kIGlmOyAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGVuZCBpZjsKCiAgICAgICAgICAgIHdoZW4gYnNDb3B5MSA9PgoKICAgICAgICAgICAgICAgIC0tY29weSBtb2RlCiAgICAgICAgICAgICAgICBjYXNlIGNvbW1hbmRSZWcoIDcgZG93bnRvIDAgKSBpcwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1jb3B5CiAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjAwIiA9PgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBkbWFXcml0ZURhdGEgICAgPD0gZG1hUmVhZERhdGE7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgYmx0UmV0dXJuU3RhdGUgIDw9IGJzQ29weTI7CiAgICAgICAgICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic1N1YldyaXRlMDsKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1tYXNrIGNvcHkKICAgICAgICAgICAgICAgICAgICB3aGVuIHgiMDEiID0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgLS1jaGVjayBpZiBjb2xvciBtYXRjaGVzIG1hc2sKICAgICAgICAgICAgICAgICAgICAgICAgaWYgZG1hUmVhZERhdGEoIDE1IGRvd250byAwICkgPSBpbnB1dDBSZWcoIDE1IGRvd250byAwICkgdGhlbgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tc2tpcCB3cml0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzQ29weTI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0td3JpdGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRtYVdyaXRlRGF0YSAgICA8PSBkbWFSZWFkRGF0YTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmx0UmV0dXJuU3RhdGUgIDw9IGJzQ29weTI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNTdWJXcml0ZTA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgZW5kIGlmOyAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHdoZW4gb3RoZXJzID0+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGRtYVdyaXRlRGF0YSAgICA8PSBkbWFSZWFkRGF0YTsKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGJsdFJldHVyblN0YXRlICA8PSBic0NvcHkyOwogICAgICAgICAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNTdWJXcml0ZTA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGVuZCBjYXNlOwogICAgICAgICAgICAgICAgCgogICAgICAgICAgICB3aGVuIGJzQ29weTIgPT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBjb3VudGVyWCAgICAgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGNvdW50ZXJYICkgLSAxICk7CiAgICAgICAgICAgICAgICBkbWFSZWFkQWRkciAgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGRtYVJlYWRBZGRyICkgKyAxICk7CiAgICAgICAgICAgICAgICBkbWFXcml0ZUFkZHIgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGRtYVdyaXRlQWRkciApICsgMSApOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNDb3B5MDsKCgogICAgICAgICAgICB3aGVuIGJzU2NhbGVDb3B5MCA9PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYgY291bnRlclggLz0geCIwMDAwIiB0aGVuCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLXNjU2MgKz0gZGVsdGFYCiAgICAgICAgICAgICAgICAgICAgc2NTeCAgICAgICAgICAgIDw9IHN0ZF9sb2dpY192ZWN0b3IoIHVuc2lnbmVkKCBzY1N4ICkgKyB1bnNpZ25lZCggaW5wdXQwUmVnICkgKTsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGJsdFJldHVyblN0YXRlICA8PSBic1NjYWxlQ29weTQ7CiAgICAgICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzU3ViUmVhZDA7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLWVuZCBvZiByb3cKICAgICAgICAgICAgICAgICAgICBpZiBjb3VudGVyWSAvPSB4IjAwMDAiIHRoZW4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgY291bnRlclkgICAgICAgIDw9IHN0ZF9sb2dpY192ZWN0b3IoIHVuc2lnbmVkKCBjb3VudGVyWSApIC0gMSApOwogICAgICAgICAgICAgICAgICAgICAgICBjb3VudGVyWCAgICAgICAgPD0gY291bnRlclhNYXg7CgogICAgICAgICAgICAgICAgICAgICAgICAtLXNjUm93QWRkcmVzc1ZhciA6PSB1bnNpZ25lZCggc2FBZGRyZXNzUmVnKCAyNSBkb3dudG8gMSApICkgKyB1bnNpZ25lZCggKCB1bnNpZ25lZCggc2FXaWR0aFJlZyApICogdW5zaWduZWQoIHNjU3koIDMxIGRvd250byAxNiApICkgKSApOwogICAgICAgICAgICAgICAgICAgICAgICBkcFNhICAgICAgICAgICAgPD0gc2NSb3dBZGRyZXNzVmFyKCAyNCBkb3dudG8gMCApOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgc2NTeCAgICAgICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGRtYVdyaXRlQWRkciAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggZG1hV3JpdGVBZGRyICkgKyB1bnNpZ25lZCggZGFDb2xBZGQgKSApOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNTY2FsZUNvcHkxOyAgICAtLXdhaXRzdGF0ZXMKICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic0lkbGU7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgZW5kIGlmOyAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGVuZCBpZjsKCiAgICAgICAgICAgIHdoZW4gYnNTY2FsZUNvcHkxID0+CgogICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgPD0gYnNTY2FsZUNvcHkyOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIHdoZW4gYnNTY2FsZUNvcHkyID0+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgPD0gYnNTY2FsZUNvcHkzOwoKICAgICAgICAgICAgd2hlbiBic1NjYWxlQ29weTMgPT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAtLXNjU3kgKz0gZGVsdGFZCiAgICAgICAgICAgICAgICBzY1N5ICAgICAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggc2NTeSApICsgdW5zaWduZWQoIGlucHV0MVJlZyApICk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGRtYVJlYWRBZGRyIDw9ICBkcFNhOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAtLXJlYWQgZGF0YQogICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgPD0gYnNTY2FsZUNvcHkwOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICB3aGVuIGJzU2NhbGVDb3B5NCA9PgogICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAtLXNjYWxlIGNvcHkgbW9kZQogICAgICAgICAgICAgICAgY2FzZSBjb21tYW5kUmVnKCA3IGRvd250byAwICkgaXMKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLXNjYWxlIGNvcHkKICAgICAgICAgICAgICAgICAgICB3aGVuIHgiMDAiID0+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGRtYVdyaXRlRGF0YSAgICA8PSBkbWFSZWFkRGF0YTsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBibHRSZXR1cm5TdGF0ZSAgPD0gYnNTY2FsZUNvcHk1OwogICAgICAgICAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNTdWJXcml0ZTA7CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbWFza2VkIHNjYWxlIGNvcHkKICAgICAgICAgICAgICAgICAgICB3aGVuIHgiMDEiID0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgLS1jaGVjayBpZiBjb2xvciBtYXRjaGVzIG1hc2sKICAgICAgICAgICAgICAgICAgICAgICAgaWYgZG1hUmVhZERhdGEoIDE1IGRvd250byAwICkgPSBpbnB1dDJSZWcoIDE1IGRvd250byAwICkgdGhlbgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tc2tpcCB3cml0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzU2NhbGVDb3B5NTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBlbHNlCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLS13cml0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZG1hV3JpdGVEYXRhICAgIDw9IGRtYVJlYWREYXRhOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBibHRSZXR1cm5TdGF0ZSAgPD0gYnNTY2FsZUNvcHk1OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzU3ViV3JpdGUwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgd2hlbiBvdGhlcnMgPT4KCiAgICAgICAgICAgICAgICAgICAgICAgIGRtYVdyaXRlRGF0YSAgICA8PSBkbWFSZWFkRGF0YTsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBibHRSZXR1cm5TdGF0ZSAgPD0gYnNTY2FsZUNvcHk1OwogICAgICAgICAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNTdWJXcml0ZTA7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGVuZCBjYXNlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICB3aGVuIGJzU2NhbGVDb3B5NSA9PgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIGRtYVJlYWRBZGRyICAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggZHBTYSApICsgdW5zaWduZWQoIHNjU3goIDMxIGRvd250byAxNiApICkgKTsKICAgICAgICAgICAgICAgIGRtYVdyaXRlQWRkciAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggZG1hV3JpdGVBZGRyICkgKyAxICk7CiAgICAgICAgICAgICAgICBjb3VudGVyWCAgICAgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGNvdW50ZXJYICkgLSAxICk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic1NjYWxlQ29weTA7ICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICB3aGVuIGJzQWxwaGFDb3B5MCA9PgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmIGNvdW50ZXJYIC89IHgiMDAwMCIgdGhlbgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgZG1hUmVhZEFkZHIgICAgIDw9IGRwU2E7CiAgICAgICAgICAgICAgICAgICAgYmx0UmV0dXJuU3RhdGUgIDw9IGJzQWxwaGFDb3B5MTsKICAgICAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNTdWJSZWFkMDsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tZW5kIG9mIHJvdwogICAgICAgICAgICAgICAgICAgIGlmIGNvdW50ZXJZIC89IHgiMDAwMCIgdGhlbgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBjb3VudGVyWSAgICAgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGNvdW50ZXJZICkgLSAxICk7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ZXJYICAgICAgICA8PSBjb3VudGVyWE1heDsKCiAgICAgICAgICAgICAgICAgICAgICAgIGRwU2EgICAgICAgICAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggZHBTYSApICsgdW5zaWduZWQoIHNhQ29sQWRkICkgKTsKICAgICAgICAgICAgICAgICAgICAgICAgZHBTYiAgICAgICAgICAgIDw9IHN0ZF9sb2dpY192ZWN0b3IoIHVuc2lnbmVkKCBkcFNiICkgKyB1bnNpZ25lZCggc2JDb2xBZGQgKSApOwogICAgICAgICAgICAgICAgICAgICAgICBkbWFXcml0ZUFkZHIgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGRtYVdyaXRlQWRkciApICsgdW5zaWduZWQoIGRhQ29sQWRkICkgKTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic0lkbGU7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgZW5kIGlmOyAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGVuZCBpZjsKICAgICAgICAgICAKICAgICAgICAgICAgd2hlbiBic0FscGhhQ29weTEgPT4KCiAgICAgICAgICAgICAgICBwYUNvbG9ySW5BICAgICAgPD0gZG1hUmVhZERhdGEoIDE1IGRvd250byAwICk7CiAgICAgICAgICAgICAgICBkbWFSZWFkQWRkciAgICAgPD0gZHBTYjsKICAgCiAgICAgICAgICAgICAgICAtLWFscGhhIGNvcHkgbW9kZQogICAgICAgICAgICAgICAgY2FzZSBjb21tYW5kUmVnKCA3IGRvd250byAwICkgaXMKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tYWxwaGEgY29weQogICAgICAgICAgICAgICAgICAgIHdoZW4geCIwMCIgPT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGJsdFJldHVyblN0YXRlICA8PSBic0FscGhhQ29weTI7CiAgICAgICAgICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic1N1YlJlYWQwOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tYWxwaGEgbWFzayBjb3B5CiAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjAxIiA9PgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgLS1jaGVjayBpZiBjb2xvciBtYXRjaGVzIG1hc2sKICAgICAgICAgICAgICAgICAgICAgICAgaWYgZG1hUmVhZERhdGEoIDE1IGRvd250byAwICkgPSBpbnB1dDFSZWcoIDE1IGRvd250byAwICkgdGhlbgoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tc2tpcCByZWFkIGFuZCB3cml0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzQWxwaGFDb3B5NTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBlbHNlCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLS1jb250aW51ZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsdFJldHVyblN0YXRlICA8PSBic0FscGhhQ29weTI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNTdWJSZWFkMDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgZW5kIGlmOyAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHdoZW4gb3RoZXJzID0+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGJsdFJldHVyblN0YXRlICA8PSBic0FscGhhQ29weTI7CiAgICAgICAgICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic1N1YlJlYWQwOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGVuZCBjYXNlOyAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgCiAgICAgICAgICAgIHdoZW4gYnNBbHBoYUNvcHkyID0+CgogICAgICAgICAgICAgICAgcGFDb2xvckluQiAgICAgIDw9IGRtYVJlYWREYXRhKCAxNSBkb3dudG8gMCApOwogICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzQWxwaGFDb3B5MzsKCiAgICAgICAgICAgIHdoZW4gYnNBbHBoYUNvcHkzID0+CiAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNBbHBoYUNvcHk0OwoKICAgICAgICAgICAgd2hlbiBic0FscGhhQ29weTQgPT4KCiAgICAgICAgICAgICAgICBkbWFXcml0ZURhdGEgICAgPD0geCIwMDAwIiAmIHBhQ29sb3JPdXQ7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGJsdFJldHVyblN0YXRlICA8PSBic0FscGhhQ29weTU7CiAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNTdWJXcml0ZTA7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgd2hlbiBic0FscGhhQ29weTUgPT4KCiAgICAgICAgICAgICAgICBjb3VudGVyWCAgICAgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGNvdW50ZXJYICkgLSAxICk7CiAgICAgICAgICAgICAgICBkcFNhICAgICAgICAgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGRwU2EgKSArIDEgKTsKICAgICAgICAgICAgICAgIGRwU2IgICAgICAgICAgICA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggZHBTYiApICsgMSApOwogICAgICAgICAgICAgICAgZG1hV3JpdGVBZGRyICAgIDw9IHN0ZF9sb2dpY192ZWN0b3IoIHVuc2lnbmVkKCBkbWFXcml0ZUFkZHIgKSArIDEgKTsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzQWxwaGFDb3B5MDsKICAgICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAtLSBzdWJyb3V0aW5lcwogICAgICAgICAgICAKICAgICAgICAgICAgLS0gcmVhZCBzdWJyb3V0aW5lCiAgICAgICAgICAgIHdoZW4gYnNTdWJSZWFkMCA9PgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmIGJsdERtYVJlYWR5ID0gJzEnIHRoZW4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGJsdEEgICAgICAgICAgICA8PSBkbWFSZWFkQWRkcjsKICAgICAgICAgICAgICAgICAgICBibHRXciAgICAgICAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIGJsdERtYVJlcXVlc3QgICA8PSAnMSc7CiAgICAKICAgICAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICAgICAgPD0gYnNTdWJSZWFkMTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGVuZCBpZjsKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgIHdoZW4gYnNTdWJSZWFkMSA9PgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmIGJsdERtYVJlYWR5ID0gJzAnIHRoZW4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGJsdERtYVJlcXVlc3QgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzU3ViUmVhZDI7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBlbmQgaWY7CgogICAgICAgICAgICB3aGVuIGJzU3ViUmVhZDIgPT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiBibHREbWFSZWFkeSA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgZG1hUmVhZERhdGEgPD0gYmx0RGluOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgIDw9IGJsdFJldHVyblN0YXRlOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgZW5kIGlmOwogICAgICAgICAgICAKICAgICAgICAgICAgLS0gd3JpdGUgc3Vicm91dGluZSAgICAgICAKICAgICAgICAgICAgd2hlbiBic1N1YldyaXRlMCA9PgoKICAgICAgICAgICAgICAgIGlmIGJsdERtYVJlYWR5ID0gJzEnIHRoZW4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGJsdEEgICAgICAgICAgICA8PSBkbWFXcml0ZUFkZHI7CiAgICAgICAgICAgICAgICAgICAgYmx0RE91dCAgICAgICAgIDw9IGRtYVdyaXRlRGF0YTsKCiAgICAgICAgICAgICAgICAgICAgYmx0V3IgICAgICAgICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBibHREbWFSZXF1ZXN0ICAgPD0gJzEnOwogICAgICAgIAogICAgICAgICAgICAgICAgICAgIGJsdFN0YXRlICAgICAgICA8PSBic1N1YldyaXRlMTsgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBlbmQgaWY7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgd2hlbiBic1N1YldyaXRlMSA9PgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIGlmIGJsdERtYVJlYWR5ID0gJzAnIHRoZW4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGJsdERtYVJlcXVlc3QgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgYmx0U3RhdGUgICAgICAgIDw9IGJzU3ViV3JpdGUyOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgZW5kIGlmOwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIHdoZW4gYnNTdWJXcml0ZTIgPT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBpZiBibHREbWFSZWFkeSA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICA8PSBibHRSZXR1cm5TdGF0ZTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGVuZCBpZjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICB3aGVuIG90aGVycyA9PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBibHRTdGF0ZSAgICA8PSBic0lkbGU7CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgZW5kIGNhc2U7IC0tYmx0U3RhdGUgaXMKICAgICAgICAKICAgIGVuZCBpZjsgLS0gcmVzZXQgPSAnMScsIHJpc2luZ19lZGdlKCBjbG9jayApICAgCgplbmQgcHJvY2VzczsKCi0tIHBsYWNlIHBpeGVsIGFscGhhCgpwaXhlbEFscGhhSW5zdDogcGl4ZWxBbHBoYQpwb3J0IG1hcCgKCiAgICByZXNldCAgICAgICA9PiByZXNldCwKICAgIGNsb2NrICAgICAgID0+IGNsb2NrLAoJIAkgCiAgICBjb2xvckluQSAgICA9PiBwYUNvbG9ySW5BLAogICAgY29sb3JJbkIgICAgPT4gcGFDb2xvckluQiwKICAgIGFscGhhICAgICAgID0+IHBhQWxwaGEsCiAgICBjb2xvck91dCAgICA9PiBwYUNvbG9yT3V0CgopOwogICAgCmVuZCBCZWhhdmlvcmFsOwoAAAAAAAAAAI6QAAAAAAAAAAAAAAAAAAAAAAAAjpAAAAAAAAAAAAAAAAAAAAAAAACOkAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAACAAAAAAAAEAIAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "tangerineA7_200.srcs/sources_1/new/sdramDMA.vhd",
			"settings":
			{
				"buffer_size": 43223,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					9,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAPaKAAAAAAAA94oAAAAAAAAAAAAA94oAAAAAAAD4igAAAAAAAAAAAAD4igAAAAAAAPmKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9ooAAAAAAAD2igAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"reindent",
					null,
					"AQAAAPeKAAAAAAAAC4sAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA94oAAAAAAAD3igAAAAAAAAAAAAAAAAAA"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "sdc"
					},
					"AwAAAAuLAAAAAAAADIsAAAAAAAAAAAAADIsAAAAAAAANiwAAAAAAAAAAAAANiwAAAAAAAA6LAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAC4sAAAAAAAALiwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert_completion",
					{
						"completion": "sdcState",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "sdcState"
					},
					"AgAAAAuLAAAAAAAAC4sAAAAAAAADAAAAc2RjC4sAAAAAAAATiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADosAAAAAAAAOiwAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert_completion",
					{
						"completion": "sdcState_T",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "sdcState_T"
					},
					"AgAAAAuLAAAAAAAAC4sAAAAAAAAIAAAAc2RjU3RhdGULiwAAAAAAABWLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAE4sAAAAAAAATiwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					2,
					"left_delete",
					null,
					"AgAAABSLAAAAAAAAFIsAAAAAAAABAAAAVBOLAAAAAAAAE4sAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAFYsAAAAAAAAViwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\tM<"
					},
					"AwAAABOLAAAAAAAAF4sAAAAAAAAAAAAAF4sAAAAAAAAYiwAAAAAAAAAAAAAYiwAAAAAAABmLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAE4sAAAAAAAATiwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					2,
					"left_delete",
					null,
					"AgAAABiLAAAAAAAAGIsAAAAAAAABAAAAPBeLAAAAAAAAF4sAAAAAAAABAAAATQ",
					"AQAAAAAAAAABAAAAGYsAAAAAAAAZiwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "<="
					},
					"AgAAABeLAAAAAAAAGIsAAAAAAAAAAAAAGIsAAAAAAAAZiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF4sAAAAAAAAXiwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABmLAAAAAAAAGosAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGYsAAAAAAAAZiwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAABmLAAAAAAAAGYsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAGosAAAAAAAAaiwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " sdc"
					},
					"BAAAABmLAAAAAAAAGosAAAAAAAAAAAAAGosAAAAAAAAbiwAAAAAAAAAAAAAbiwAAAAAAAByLAAAAAAAAAAAAAByLAAAAAAAAHYsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGYsAAAAAAAAZiwAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "Cjh"
					},
					"AwAAAB2LAAAAAAAAHosAAAAAAAAAAAAAHosAAAAAAAAfiwAAAAAAAAAAAAAfiwAAAAAAACCLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHYsAAAAAAAAdiwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					2,
					"left_delete",
					null,
					"AgAAAB+LAAAAAAAAH4sAAAAAAAABAAAAaB6LAAAAAAAAHosAAAAAAAABAAAAag",
					"AQAAAAAAAAABAAAAIIsAAAAAAAAgiwAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "h0Read"
					},
					"BgAAAB6LAAAAAAAAH4sAAAAAAAAAAAAAH4sAAAAAAAAgiwAAAAAAAAAAAAAgiwAAAAAAACGLAAAAAAAAAAAAACGLAAAAAAAAIosAAAAAAAAAAAAAIosAAAAAAAAjiwAAAAAAAAAAAAAjiwAAAAAAACSLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHosAAAAAAAAeiwAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "7;"
					},
					"AgAAACSLAAAAAAAAJYsAAAAAAAAAAAAAJYsAAAAAAAAmiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJIsAAAAAAAAkiwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAACaLAAAAAAAAJ4sAAAAAAAAAAAAAJ4sAAAAAAAA7iwAAAAAAAAAAAAA7iwAAAAAAADyLAAAAAAAAAAAAADyLAAAAAAAAUIsAAAAAAAAAAAAAJ4sAAAAAAAAniwAAAAAAABQAAAAgICAgICAgICAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAAJosAAAAAAAAmiwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"left_delete",
					null,
					"AQAAADiLAAAAAAAAOIsAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAPIsAAAAAAAA8iwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "whenm"
					},
					"BQAAADiLAAAAAAAAOYsAAAAAAAAAAAAAOYsAAAAAAAA6iwAAAAAAAAAAAAA6iwAAAAAAADuLAAAAAAAAAAAAADuLAAAAAAAAPIsAAAAAAAAAAAAAPIsAAAAAAAA9iwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOIsAAAAAAAA4iwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAADyLAAAAAAAAPIsAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAPYsAAAAAAAA9iwAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " sdcCj-"
					},
					"BwAAADyLAAAAAAAAPYsAAAAAAAAAAAAAPYsAAAAAAAA+iwAAAAAAAAAAAAA+iwAAAAAAAD+LAAAAAAAAAAAAAD+LAAAAAAAAQIsAAAAAAAAAAAAAQIsAAAAAAABBiwAAAAAAAAAAAABBiwAAAAAAAEKLAAAAAAAAAAAAAEKLAAAAAAAAQ4sAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPIsAAAAAAAA8iwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					2,
					"left_delete",
					null,
					"AgAAAEKLAAAAAAAAQosAAAAAAAABAAAALUGLAAAAAAAAQYsAAAAAAAABAAAAag",
					"AQAAAAAAAAABAAAAQ4sAAAAAAABDiwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "h0Read"
					},
					"BgAAAEGLAAAAAAAAQosAAAAAAAAAAAAAQosAAAAAAABDiwAAAAAAAAAAAABDiwAAAAAAAESLAAAAAAAAAAAAAESLAAAAAAAARYsAAAAAAAAAAAAARYsAAAAAAABGiwAAAAAAAAAAAABGiwAAAAAAAEeLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQYsAAAAAAABBiwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AQAAAEeLAAAAAAAASIsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAR4sAAAAAAABHiwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " >"
					},
					"AgAAAEiLAAAAAAAASYsAAAAAAAAAAAAASYsAAAAAAABKiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASIsAAAAAAABIiwAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"left_delete",
					null,
					"AQAAAEmLAAAAAAAASYsAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAASosAAAAAAABKiwAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAEmLAAAAAAAASosAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASYsAAAAAAABJiwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAAEmLAAAAAAAASYsAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAASosAAAAAAABKiwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "=>"
					},
					"AgAAAEmLAAAAAAAASosAAAAAAAAAAAAASosAAAAAAABLiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASYsAAAAAAABJiwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"left_delete",
					null,
					"AQAAAEyLAAAAAAAATIsAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAATYsAAAAAAABNiwAAAAAAAAAAAAAAQHNA"
				],
				[
					49,
					1,
					"right_delete",
					null,
					"AQAAAPeLAAAAAAAA94sAAAAAAACTAAAAICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0NoMFJlYWQ2OwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGVuZCBpZjsK",
					"AQAAAAAAAAABAAAA94sAAAAAAACKjAAAAAAAAAAAAAAAAAAA"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "\t\t\t\t\t"
					},
					"BQAAAPeLAAAAAAAA+4sAAAAAAAAAAAAA+4sAAAAAAAD/iwAAAAAAAAAAAAD/iwAAAAAAAAOMAAAAAAAAAAAAAAOMAAAAAAAAB4wAAAAAAAAAAAAAB4wAAAAAAAALjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA94sAAAAAAAD3iwAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "ed"
					},
					"AgAAAAuMAAAAAAAADIwAAAAAAAAAAAAADIwAAAAAAAANjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAC4wAAAAAAAALjAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"left_delete",
					null,
					"AQAAAAyMAAAAAAAADIwAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAADYwAAAAAAAANjAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "nd"
					},
					"AgAAAAyMAAAAAAAADYwAAAAAAAAAAAAADYwAAAAAAAAOjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADIwAAAAAAAAMjAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": " if;"
					},
					"BAAAAA6MAAAAAAAAD4wAAAAAAAAAAAAAD4wAAAAAAAAQjAAAAAAAAAAAAAAQjAAAAAAAABGMAAAAAAAAAAAAABGMAAAAAAAAEowAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADowAAAAAAAAOjAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAJ6KAAAAAAAAoooAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnooAAAAAAACeigAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					4,
					"left_delete",
					null,
					"BAAAAKGKAAAAAAAAoYoAAAAAAAABAAAAIKCKAAAAAAAAoIoAAAAAAAABAAAAIJ+KAAAAAAAAn4oAAAAAAAABAAAAIJ6KAAAAAAAAnooAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAoooAAAAAAACiigAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "\t\t"
					},
					"AgAAAJ2KAAAAAAAAnooAAAAAAAAAAAAAnooAAAAAAACiigAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnYoAAAAAAACdigAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					11,
					"right_delete",
					null,
					"CwAAAEUQAAAAAAAARRAAAAAAAAABAAAAc0UQAAAAAAAARRAAAAAAAAABAAAAZEUQAAAAAAAARRAAAAAAAAABAAAAY0UQAAAAAAAARRAAAAAAAAABAAAAQ0UQAAAAAAAARRAAAAAAAAABAAAAaEUQAAAAAAAARRAAAAAAAAABAAAAMEUQAAAAAAAARRAAAAAAAAABAAAAUkUQAAAAAAAARRAAAAAAAAABAAAAZUUQAAAAAAAARRAAAAAAAAABAAAAYUUQAAAAAAAARRAAAAAAAAABAAAAZEUQAAAAAAAARRAAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAARRAAAAAAAABFEAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"right_delete",
					null,
					"AQAAAEUQAAAAAAAARRAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAARRAAAAAAAABFEAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"right_delete",
					null,
					"AQAAALgQAAAAAAAAuBAAAAAAAAANAAAAc2RjQ2gwV3JpdGU4LA",
					"AQAAAAAAAAABAAAAuBAAAAAAAADFEAAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					2,
					"right_delete",
					null,
					"AgAAAKoQAAAAAAAAqhAAAAAAAAAMAAAAc2RjQ2gwV3JpdGU3qhAAAAAAAACqEAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAthAAAAAAAACqEAAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"left_delete",
					null,
					"AQAAAKkQAAAAAAAAqRAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAqhAAAAAAAACqEAAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					2,
					"right_delete",
					null,
					"AgAAABURAAAAAAAAFREAAAAAAAALAAAAc2RjQ2gxUmVhZDgVEQAAAAAAABURAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAFREAAAAAAAAgEQAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					2,
					"right_delete",
					null,
					"AgAAAIgRAAAAAAAAiBEAAAAAAAAMAAAAc2RjQ2gxV3JpdGU4iBEAAAAAAACIEQAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAAiBEAAAAAAACUEQAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"right_delete",
					null,
					"AQAAAN0aAAAAAAAA3RoAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAA3RoAAAAAAADdGgAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAN0aAAAAAAAA3hoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3RoAAAAAAADdGgAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					2,
					"right_delete",
					null,
					"AgAAAN4aAAAAAAAA3hoAAAAAAAABAAAAMt4aAAAAAAAA3hoAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA3hoAAAAAAADeGgAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "18"
					},
					"AgAAAN4aAAAAAAAA3xoAAAAAAAAAAAAA3xoAAAAAAADgGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hoAAAAAAADeGgAAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"right_delete",
					null,
					"AQAAAChAAAAAAAAAKEAAAAAAAAA2AAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLWJhbmsvcm93IGFjdGl2YXRpb24K",
					"AQAAAAAAAAABAAAAKEAAAAAAAABeQAAAAAAAAAAAAAAAAAAA"
				],
				[
					220,
					2,
					"left_delete",
					null,
					"AgAAAPhBAAAAAAAA+EEAAAAAAAABAAAACvRBAAAAAAAA9EEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAA+UEAAAAAAAD5QQAAAAAAAAAAAAAAAAAA"
				],
				[
					225,
					1,
					"right_delete",
					null,
					"AQAAAORBAAAAAAAA5EEAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAA5EEAAAAAAADkQQAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAORBAAAAAAAA5UEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5EEAAAAAAADkQQAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"cut",
					null,
					"AQAAAJpBAAAAAAAAmkEAAAAAAADjAQAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXJvdyAvIGJhbmsgYWRkcmVzcyAoIGNwdSBhZHIgbWF4IGRvd250byA5ICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1CQSAgICAgPD0gY2gwQSggMjMgZG93bnRvIDIyICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1BICAgICAgPD0gY2gwQSggMjEgZG93bnRvIDkgKTsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNkcmFtV0UgICAgIDw9ICcxJzsK",
					"AQAAAAAAAAABAAAAmkEAAAAAAAB9QwAAAAAAAAAAAAAAAAAA"
				],
				[
					232,
					1,
					"paste",
					null,
					"AQAAAM8/AAAAAAAAskEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzz8AAAAAAADPPwAAAAAAAAAAAAAAAAAA"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALJBAAAAAAAAs0EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAskEAAAAAAACyQQAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"unindent",
					null,
					"CQAAAM8/AAAAAAAAzz8AAAAAAAAEAAAAICAgIBlAAAAAAAAAGUAAAAAAAAAEAAAAICAgIEBAAAAAAAAAQEAAAAAAAAAEAAAAICAgIIFAAAAAAAAAgUAAAAAAAAAEAAAAICAgIMFAAAAAAAAAwUAAAAAAAAAEAAAAICAgIM5AAAAAAAAAzkAAAAAAAAAEAAAAICAgIP5AAAAAAAAA/kAAAAAAAAAEAAAAICAgIC5BAAAAAAAALkEAAAAAAAAEAAAAICAgIF5BAAAAAAAAXkEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAzz8AAAAAAACyQQAAAAAAAAAAAAAAAAAA"
				],
				[
					247,
					1,
					"right_delete",
					null,
					"AQAAACBFAAAAAAAAIEUAAAAAAAA9AgAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXJvdyBzZWxlY3QsIHJlYWQsIGF1dG8gcHJlY2hhcmdlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLS1yb3cgLyBiYW5rIGFkZHJlc3MgKCBjcHUgYWRyIG1heCBkb3dudG8gOCApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1CQSAgICAgPD0gY2gwQSggMjMgZG93bnRvIDIyICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1BICAgICAgPD0gY2gwQSggMjEgZG93bnRvIDkgKTsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNkcmFtV0UgICAgIDw9ICcxJzsK",
					"AQAAAAAAAAABAAAAIEUAAAAAAABdRwAAAAAAAAAAAAAAAAAA"
				],
				[
					248,
					3,
					"left_delete",
					null,
					"AwAAAB9FAAAAAAAAH0UAAAAAAAABAAAAChtFAAAAAAAAG0UAAAAAAAAEAAAAICAgIBdFAAAAAAAAF0UAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAIEUAAAAAAAAgRQAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAA9FAAAAAAAAD0UAAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAAF0UAAAAAAAAXRQAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"left_delete",
					null,
					"AQAAAA5FAAAAAAAADkUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAD0UAAAAAAAAPRQAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"cut",
					null,
					"AQAAAPlBAAAAAAAA+UEAAAAAAABCAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbURRTSAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsK",
					"AQAAAAAAAAABAAAA+UEAAAAAAAA7QgAAAAAAAAAAAAAAAAAA"
				],
				[
					260,
					1,
					"paste",
					null,
					"AQAAAI9BAAAAAAAA0UEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAj0EAAAAAAACPQQAAAAAAAAAAAAAAAAAA"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANFBAAAAAAAA0kEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0UEAAAAAAADRQQAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"unindent",
					null,
					"AQAAAI9BAAAAAAAAj0EAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAj0EAAAAAAACPQQAAAAAAAAAAAAAAAAAA"
				],
				[
					267,
					1,
					"right_delete",
					null,
					"AQAAAENEAAAAAAAAQ0QAAAAAAABCAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbURRTSAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsK",
					"AQAAAAAAAAABAAAAQ0QAAAAAAACFRAAAAAAAAAAAAAAAAAAA"
				],
				[
					270,
					1,
					"right_delete",
					null,
					"AQAAAPxDAAAAAAAA/EMAAAAAAAA2AAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLWJhbmsvcm93IGFjdGl2YXRpb24K",
					"AQAAAAAAAAABAAAA/EMAAAAAAAAyRAAAAAAAAAAAAAAAAAAA"
				],
				[
					271,
					3,
					"left_delete",
					null,
					"AwAAAPtDAAAAAAAA+0MAAAAAAAABAAAACvpDAAAAAAAA+kMAAAAAAAABAAAAIPlDAAAAAAAA+UMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA/EMAAAAAAAD8QwAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAAFdDAAAAAAAAV0MAAAAAAAAMAAAAICAgICAgICAgICAg",
					"AQAAAAAAAAABAAAAY0MAAAAAAABjQwAAAAAAAAAAAAAA4HRA"
				],
				[
					277,
					1,
					"left_delete",
					null,
					"AQAAAFZDAAAAAAAAVkMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAV0MAAAAAAABXQwAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"delete_word",
					{
						"forward": false
					},
					"AQAAADhCAAAAAAAAOEIAAAAAAAAgAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAAWEIAAAAAAABYQgAAAAAAAAAAAAAAoHFA"
				],
				[
					280,
					1,
					"left_delete",
					null,
					"AQAAADdCAAAAAAAAN0IAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAOEIAAAAAAAA4QgAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"left_delete",
					null,
					"AQAAAMw/AAAAAAAAzD8AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAzT8AAAAAAADNPwAAAAAAAAAAAAAAoGFA"
				],
				[
					292,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD2qAAALS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQotLSBDb21wYW55OiAKLS0gRW5naW5lZXI6IAotLSAKLS0gQ3JlYXRlIERhdGU6IDA4LzA3LzIwMjQgMDk6NTg6MzEgQU0KLS0gRGVzaWduIE5hbWU6IAotLSBNb2R1bGUgTmFtZTogc2RyYW1ETUEgLSBCZWhhdmlvcmFsCi0tIFByb2plY3QgTmFtZTogCi0tIFRhcmdldCBEZXZpY2VzOiAKLS0gVG9vbCBWZXJzaW9uczogCi0tIERlc2NyaXB0aW9uOiAKLS0gCi0tIERlcGVuZGVuY2llczogCi0tIAotLSBSZXZpc2lvbjoKLS0gUmV2aXNpb24gMC4wMSAtIEZpbGUgQ3JlYXRlZAotLSBBZGRpdGlvbmFsIENvbW1lbnRzOgotLSAKLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKLS0KLS1wcmV2aW91cyBzZHJhbSBjbG9jayBwaGFzZSBzaGlmdCAtIDE5NQoKCmxpYnJhcnkgSUVFRTsKdXNlIElFRUUuU1REX0xPR0lDXzExNjQuQUxMOwp1c2UgSUVFRS5OVU1FUklDX1NURC5BTEw7CgpsaWJyYXJ5IFVOSVNJTTsKdXNlIFVOSVNJTS5WQ29tcG9uZW50cy5hbGw7CgplbnRpdHkgc2RyYW1ETUEgaXMKcG9ydCgKICAgIAogICAgLS1yZXNldCwgY2xvY2tzCiAgICByZXNldDogICAgICAgICAgICAgIGluICAgICAgc3RkX2xvZ2ljOwogICAgCiAgICBjcHVDbG9jazogICAgICAgICAgIGluICAgICAgc3RkX2xvZ2ljOwogICAgc2RyYW1DbG9jazogICAgICAgICBpbiAgICAgIHN0ZF9sb2dpYzsKICAgIHNkcmFtQ2xvY2tQczogICAgICAgaW4gICAgICBzdGRfbG9naWM7CgoKICAgLS1idXMgaW50ZXJmYWNlICggcmVnaXN0ZXJzICkKCiAgICBhOiAgICAgICAgICAgICAgICAgIGluICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMTUgZG93bnRvIDAgKTsKICAgIGRpbjogICAgICAgICAgICAgICAgaW4gICAgICBzdGRfbG9naWNfdmVjdG9yKCAzMSBkb3dudG8gMCApOwogICAgZG91dDogICAgICAgICAgICAgICBvdXQgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDMxIGRvd250byAwICk7CiAgICBjZTogICAgICAgICAgICAgICAgIGluICAgICAgc3RkX2xvZ2ljOwogICAgd3I6ICAgICAgICAgICAgICAgICBpbiAgICAgIHN0ZF9sb2dpYzsKICAgIGRhdGFNYXNrOiAgICAgICAgICAgaW4gICAgICBzdGRfbG9naWNfdmVjdG9yKCAzIGRvd250byAwICk7CiAgICByZWFkeTogICAgICAgICAgICAgIG91dCAgICAgc3RkX2xvZ2ljOwogICAgCiAgICAtLWNoMCAtIENQVSwgbG93ZXN0IHByaW9yaXR5OiAzCiAgICAKICAgIGNoMEE6ICAgICAgICAgICAgICAgaW4gICAgICBzdGRfbG9naWNfdmVjdG9yKCAyMyBkb3dudG8gMCApOwogICAgY2gwRGluOiAgICAgICAgICAgICBpbiAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDMxIGRvd250byAwICk7CiAgICBjaDBEb3V0OiAgICAgICAgICAgIG91dCAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKICAgCiAgICBjaDBDZTogICAgICAgICAgICAgIGluICAgICAgc3RkX2xvZ2ljOwogICAgY2gwV3I6ICAgICAgICAgICAgICBpbiAgICAgIHN0ZF9sb2dpYzsKICAgIGNoMERhdGFNYXNrOiAgICAgICAgaW4gICAgICBzdGRfbG9naWNfdmVjdG9yKCAzIGRvd250byAwICk7CiAgICBjaDBJbnN0ckN5Y2xlOiAgICAgIGluICAgICAgc3RkX2xvZ2ljOwoKICAgIGNoMFJlYWR5OiAgICAgICAgICAgb3V0ICAgICBzdGRfbG9naWM7IAogICAgCiAgICAtLWNoMSAtIGJsaXR0ZXIsIHByaW9yaXR5OiAyCiAgICBjaDFEbWFSZXF1ZXN0OiAgICAgIGluICAgICAgc3RkX2xvZ2ljOwogICAgY2gxRG1hUmVhZHk6ICAgICAgICBvdXQgICAgIHN0ZF9sb2dpYzsKICAgIGNoMURtYVdvcmRTaXplOiAgICAgaW4gICAgICBzdGRfbG9naWM7CiAgICBjaDFBOiAgICAgICAgICAgICAgIGluICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMjQgZG93bnRvIDAgKTsKICAgIGNoMURpbjogICAgICAgICAgICAgaW4gICAgICBzdGRfbG9naWNfdmVjdG9yKCAzMSBkb3dudG8gMCApOwogICAgY2gxRG91dDogICAgICAgICAgICBvdXQgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDMxIGRvd250byAwICk7CiAgICBjaDFXcjogICAgICAgICAgICAgIGluICAgICAgc3RkX2xvZ2ljOwogICAgCiAgICAtLWNoMiAtIGF1ZGlvLCByZWFkIG9ubHkgcHJpb3JpdHk6IDEKICAgIGNoMkRtYVJlcXVlc3Q6ICAgICAgaW4gICAgICBzdGRfbG9naWM7CiAgICBjaDJEbWFSZWFkeTogICAgICAgIG91dCAgICAgc3RkX2xvZ2ljOwogICAgY2gyQTogICAgICAgICAgICAgICBpbiAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDIzIGRvd250byAwICk7CiAgICBjaDJEb3V0OiAgICAgICAgICAgIG91dCAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKICAgIAogICAgLS1jaDMgLSBnZnggZGlzcGxheSwgaGlnaGVzdCBwcmlvcml0eTogMAogICAgCiAgICBjaDNEbWFSZXF1ZXN0OiAgICAgIGluICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMSBkb3dudG8gMCApOwogICAgY2gzRG1hUG9pbnRlclJlc2V0OiBpbiAgICAgIHN0ZF9sb2dpYzsKICAgIAogICAgY2gzQnVmQ2xrOiAgICAgICAgICBpbiAgICAgIHN0ZF9sb2dpYzsKICAgIGNoM0J1ZkRvdXQ6ICAgICAgICAgb3V0ICAgICBzdGRfbG9naWNfdmVjdG9yKCAzMSBkb3dudG8gMCApOwogICAgY2gzQnVmQTogICAgICAgICAgICBpbiAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDggZG93bnRvIDAgKTsKCiAgICAtLXNkcmFtCiAgICBzZHJhbUE6ICAgICAgICAgICAgIG91dCAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMTIgZG93bnRvIDAgKTsKICAgIHNkcmFtQkE6ICAgICAgICAgICAgb3V0ICAgICBzdGRfbG9naWNfdmVjdG9yKCAxIGRvd250byAwICk7CiAgICBzZHJhbUQ6ICAgICAgICAgICAgIGlub3V0ICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKICAgIHNkcmFtQ0tFOiAgICAgICAgICAgb3V0ICAgICBzdGRfbG9naWM7CiAgICBzZHJhbUNMSzogICAgICAgICAgIG91dCAgICAgc3RkX2xvZ2ljOwogICAgc2RyYW1EUU06ICAgICAgICAgICBvdXQgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDMgZG93bnRvIDAgKTsKICAgIHNkcmFtQ0FTOiAgICAgICAgICAgb3V0ICAgICBzdGRfbG9naWM7CiAgICBzZHJhbVJBUzogICAgICAgICAgIG91dCAgICAgc3RkX2xvZ2ljOwogICAgc2RyYW1XRTogICAgICAgICAgICBvdXQgICAgIHN0ZF9sb2dpYzsKICAgIHNkcmFtQ1M6ICAgICAgICAgICAgb3V0ICAgICBzdGRfbG9naWMgIAoKKTsKZW5kIHNkcmFtRE1BOwoKYXJjaGl0ZWN0dXJlIEJlaGF2aW9yYWwgb2Ygc2RyYW1ETUEgaXMKCi0tY29tcG9uZW50cwoKY29tcG9uZW50IGdmeEJ1ZlJhbSBpcwogIFBvcnQgKCAKICAgIGNsa2EgOiBpbiBTVERfTE9HSUM7CiAgICB3ZWEgOiBpbiBTVERfTE9HSUNfVkVDVE9SICggMCB0byAwICk7CiAgICBhZGRyYSA6IGluIFNURF9MT0dJQ19WRUNUT1IgKCA4IGRvd250byAwICk7CiAgICBkaW5hIDogaW4gU1REX0xPR0lDX1ZFQ1RPUiAoIDMxIGRvd250byAwICk7CiAgICBkb3V0YSA6IG91dCBTVERfTE9HSUNfVkVDVE9SICggMzEgZG93bnRvIDAgKTsKICAgIGNsa2IgOiBpbiBTVERfTE9HSUM7CiAgICB3ZWIgOiBpbiBTVERfTE9HSUNfVkVDVE9SICggMCB0byAwICk7CiAgICBhZGRyYiA6IGluIFNURF9MT0dJQ19WRUNUT1IgKCA4IGRvd250byAwICk7CiAgICBkaW5iIDogaW4gU1REX0xPR0lDX1ZFQ1RPUiAoIDMxIGRvd250byAwICk7CiAgICBkb3V0YiA6IG91dCBTVERfTE9HSUNfVkVDVE9SICggMzEgZG93bnRvIDAgKQogICk7CmVuZCBjb21wb25lbnQ7CgoKLS1zaWduYWxzCgp0eXBlIHJlZ1N0YXRlX1QgaXMgKCByc1dhaXRGb3JSZWdBY2Nlc3MsIHJzV2FpdEZvckJ1c0N5Y2xlRW5kICk7CgpzaWduYWwgcmVnU3RhdGU6ICAgIHJlZ1N0YXRlX1Q7Cgp0eXBlIHNkY1N0YXRlX1QgaXMgKCBzZGNJZGxlLCBzZGNJbml0MCwgc2RjSW5pdDEsIHNkY0luaXQyLCBzZGNJbml0Mywgc2RjSW5pdDQsIHNkY0luaXQ1LCBzZGNJbml0NiwKCglzZGNDaDBSZWFkMCwgc2RjQ2gwUmVhZDEsIHNkY0NoMFJlYWQyLCBzZGNDaDBSZWFkMywgc2RjQ2gwUmVhZDQsIHNkY0NoMFJlYWQ1LCBzZGNDaDBSZWFkNiwgc2RjQ2gwUmVhZDcsICAKCXNkY0NoMFdyaXRlMCwgc2RjQ2gwV3JpdGUxLCBzZGNDaDBXcml0ZTIsIHNkY0NoMFdyaXRlMywgc2RjQ2gwV3JpdGU0LCBzZGNDaDBXcml0ZTUsIHNkY0NoMFdyaXRlNiwgCgoJc2RjQ2gxUmVhZDAsIHNkY0NoMVJlYWQxLCBzZGNDaDFSZWFkMiwgc2RjQ2gxUmVhZDMsIHNkY0NoMVJlYWQ0LCBzZGNDaDFSZWFkNSwgc2RjQ2gxUmVhZDYsIHNkY0NoMVJlYWQ3LCAgCglzZGNDaDFXcml0ZTAsIHNkY0NoMVdyaXRlMSwgc2RjQ2gxV3JpdGUyLCBzZGNDaDFXcml0ZTMsIHNkY0NoMVdyaXRlNCwgc2RjQ2gxV3JpdGU1LCBzZGNDaDFXcml0ZTYsIHNkY0NoMVdyaXRlNywgCgoJc2RjQ2gzUmVhZDAsIHNkY0NoM1JlYWQxLCBzZGNDaDNSZWFkMiwgc2RjQ2gzUmVhZDMsIHNkY0NoM1JlYWQ0LCBzZGNDaDNSZWFkNSwgc2RjQ2gzUmVhZDYsIHNkY0NoM1JlYWQ3LCBzZGNDaDNSZWFkOCwgc2RjQ2gzUmVhZDksIAoKCXNkY1N1YlJlZnJlc2gwLCBzZGNTdWJSZWZyZXNoMSwgc2RjU3ViUmVmcmVzaDIsIHNkY1N1YlJlZnJlc2gzLCBzZGNTdWJSZWZyZXNoNCwgc2RjU3ViUmVmcmVzaDUsIHNkY1N1YlJlZnJlc2g2CgoJKTsKCQpzaWduYWwgc2RjU3RhdGU6ICAgICAgICBzZGNTdGF0ZV9UOwpzaWduYWwgc2RjUmV0dXJuU3RhdGU6ICBzZGNTdGF0ZV9UOwoKc2lnbmFsIHJlc2V0Q291bnRlcjogICAgc3RkX2xvZ2ljX3ZlY3RvciggMTUgZG93bnRvIDAgKTsKc2lnbmFsIHJlZnJlc2hDb3VudGVyOglzdGRfbG9naWNfdmVjdG9yKCAxMSBkb3dudG8gMCApOwpzaWduYWwgcmVmcmVzaFJlcXVlc3Q6CXN0ZF9sb2dpYzsKc2lnbmFsIHJlZnJlc2hEb25lOgkJc3RkX2xvZ2ljOwoKc2lnbmFsIHNkcmFtREluTGF0Y2hlZDogc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKCgotLWNoMyBzaWduYWxzCnNpZ25hbCBjaDNEbWFSZXF1ZXN0TGF0Y2hlZDogICAgc3RkX2xvZ2ljX3ZlY3RvciggMSBkb3dudG8gMCApOwpzaWduYWwgY2gzRG1hUG9pbnRlclN0YXJ0OiAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDIzIGRvd250byAwICk7CnNpZ25hbCBjaDNEbWFQb2ludGVyOiAgICAgICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMjMgZG93bnRvIDAgKTsKCnNpZ25hbCBjaDNCdWZSYW1EaW46ICAgICAgICAgICAgc3RkX2xvZ2ljX3ZlY3RvciggMzEgZG93bnRvIDAgKTsKc2lnbmFsIGNoM0J1ZlJhbVdyQTogICAgICAgICAgICBzdGRfbG9naWNfdmVjdG9yKCA4IGRvd250byAwICk7CnNpZ25hbCBjaDNCdWZSYW1XcjogICAgICAgICAgICAgc3RkX2xvZ2ljOwpzaWduYWwgY2gzVHJhbnNmZXJDb3VudGVyOiAgICAgIHN0ZF9sb2dpY192ZWN0b3IoIDcgZG93bnRvIDAgKTsKc2lnbmFsIGNoM0RtYUJ1ZlBvaW50ZXI6ICAgICAgICBzdGRfbG9naWNfdmVjdG9yKCA4IGRvd250byAwICk7CgpzaWduYWwgY2gzRG1hUmVxdWVzdDBNb2R1bG86ICAgIHN0ZF9sb2dpY192ZWN0b3IoIDcgZG93bnRvIDAgKTsKc2lnbmFsIGNoM0RtYVJlcXVlc3QxTW9kdWxvOiAgICBzdGRfbG9naWNfdmVjdG9yKCA3IGRvd250byAwICk7CgoKYmVnaW4KCi0tYXNzaWduIHNkcmFtIGNsb2NrCgpzZHJhbUNMSyAgICA8PSBzZHJhbUNsb2NrUHM7CgoKcmVnaXN0ZXJzOiBwcm9jZXNzKCBhbGwgKQpiZWdpbgoKICAgaWYgcmlzaW5nX2VkZ2UoIGNwdUNsb2NrICkgdGhlbgogICAKICAgICAgaWYgcmVzZXQgPSAnMScgdGhlbgogICAgICAgICAgICAKICAgICAgICAgcmVhZHkgICAgICAgICAgICAgICAgICA8PSAnMCc7ICAKICAgICAgICAgcmVnU3RhdGUgICAgICAgICAgICAgICA8PSByc1dhaXRGb3JSZWdBY2Nlc3M7CiAgICAgICAgIGNoM0RtYVBvaW50ZXJTdGFydCAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgIGNoM0RtYVJlcXVlc3QwTW9kdWxvICAgPD0geCI2MCI7CiAgICAgICAgIGNoM0RtYVJlcXVlc3QxTW9kdWxvICAgPD0geCI2MCI7CiAgICAgICAgIAogICAgICBlbHNlCiAgICAgIAogICAgICAgICAKICAgICAgICAgY2FzZSByZWdTdGF0ZSBpcwogICAKICAgICAgICAgICAgd2hlbiByc1dhaXRGb3JSZWdBY2Nlc3MgPT4KICAgICAgICAgCiAgICAgICAgICAgICAgIGlmIGNlID0gJzEnIHRoZW4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIC0tY3B1IHdhbnRzIHRvIGFjY2VzcyByZWdpc3RlcnMKICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIHJlYWR5IDw9ICcwJzsKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIGNhc2UgYSggNyBkb3dudG8gMCApIGlzCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAtLTB4MDAgci0gaWQgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgIHdoZW4geCIwMCIgPT4KICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGRvdXQgIDw9IHgiODAwMDAwMDMiOyAgIC0tIHNkcmFtIERNQSBpZAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgcmVhZHkgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgLS0weDA0IHItIGNvbXBvbmVudCB2ZXJzaW9uICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjAxIiA9PgogICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgZG91dCAgPD0geCIyMDI0MDkxOCI7CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICByZWFkeSA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgICAtLTB4MDggcncgY2gzIGRtYSBwb2ludGVyIHN0YXJ0ICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjAyIiA9PgogICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgZG91dCAgPD0geCIwMCIgJiBjaDNEbWFQb2ludGVyU3RhcnQ7CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBpZiB3ciA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2gzRG1hUG9pbnRlclN0YXJ0ICA8PSBkaW4oIDIzIGRvd250byAwICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgZW5kIGlmOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgcmVhZHkgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tMHgwYyBydyBjaDMgZG1hIHJlcXVlc3QgMCBtb2R1bG8KICAgICAgICAgICAgICAgICAgICB3aGVuIHgiMDMiID0+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGRvdXQgPD0geCIwMDAwMDAiICYgY2gzRG1hUmVxdWVzdDBNb2R1bG87CgogICAgICAgICAgICAgICAgICAgICAgICBpZiB3ciA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoM0RtYVJlcXVlc3QwTW9kdWxvIDw9IGRpbiggNyBkb3dudG8gMCApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgcmVhZHkgPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAtLTB4MTAgcncgY2gzIGRtYSByZXF1ZXN0IDEgbW9kdWxvCiAgICAgICAgICAgICAgICAgICAgd2hlbiB4IjA0IiA9PgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBkb3V0IDw9IHgiMDAwMDAwIiAmIGNoM0RtYVJlcXVlc3QxTW9kdWxvOwoKICAgICAgICAgICAgICAgICAgICAgICAgaWYgd3IgPSAnMScgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaDNEbWFSZXF1ZXN0MU1vZHVsbyA8PSBkaW4oIDcgZG93bnRvIDAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBlbmQgaWY7CiAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIHJlYWR5IDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgIHdoZW4gb3RoZXJzID0+CiAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBkb3V0ICA8PSAoIG90aGVycyA9PicwJyApOwogICAgICAgICAgICAgICAgICAgICAgICByZWFkeSA8PSAnMSc7CiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICBlbmQgY2FzZTsgLS1hCiAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICByZWdTdGF0ZSA8PSByc1dhaXRGb3JCdXNDeWNsZUVuZDsKICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgIGVuZCBpZjsgLS1jZSA9ICcxJwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgIHdoZW4gcnNXYWl0Rm9yQnVzQ3ljbGVFbmQgPT4KICAgICAgICAgICAgCiAgICAgICAgICAgICAgIC0td2FpdCBmb3IgYnVzIGN5Y2xlIHRvIGVuZAogICAgICAgICAgICAgICBpZiBjZSA9ICcwJyB0aGVuCiAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICByZWdTdGF0ZSA8PSByc1dhaXRGb3JSZWdBY2Nlc3M7CiAgICAgICAgICAgICAgICAgIHJlYWR5IDw9ICcwJzsKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgIGVuZCBpZjsKICAgICAgICAgICAgICAgCiAgICAgICAgICAgIHdoZW4gb3RoZXJzID0+CiAgICAgICAgICAgIAogICAgICAgICAgICAgICByZWdTdGF0ZSA8PSByc1dhaXRGb3JSZWdBY2Nlc3M7CiAgICAgICAgIAogICAgICAgICBlbmQgY2FzZTsgLS1zdGF0ZQogICAKICAgICAgZW5kIGlmOyAtLXJlc2V0ID0gJzEnCiAgIAogICBlbmQgaWY7IC0tcmlzaW5nX2VkZ2UoIGNsb2NrICkKCmVuZCBwcm9jZXNzOwoKCnJlZnJlc2hHdWFyZDogcHJvY2VzcyggYWxsICkKYmVnaW4KCQoJaWYgcmVzZXQgPSAnMScgdGhlbgoJCgkJcmVmcmVzaENvdW50ZXIJPD0gKCBvdGhlcnMgPT4gJzAnICk7CgkJcmVmcmVzaFJlcXVlc3QJPD0gJzAnOwoJCQoJZWxzZQoJCgkJaWYgcmlzaW5nX2VkZ2UoIHNkcmFtQ2xvY2sgKSB0aGVuCgkJCgkJCgkJCWlmIHJlZnJlc2hEb25lID0gJzAnIHRoZW4KCQkJCgkJCQlpZiByZWZyZXNoQ291bnRlciA9IHgiMDAwIiB0aGVuCgkJCgkJCQkJcmVmcmVzaFJlcXVlc3QJPD0gJzEnOwoJCQoJCQkJZWxzZQoJCQoJCQkJCXJlZnJlc2hDb3VudGVyCTw9IHN0ZF9sb2dpY192ZWN0b3IoIHVuc2lnbmVkKCByZWZyZXNoQ291bnRlciApIC0gMSApOwoJCQoJCQkJZW5kIGlmOwoJCgkKCQkJZWxzZSAgLS1yZWZyZXNoRG9uZSA9ICcxJyAKCQkJCgkJCQlyZWZyZXNoUmVxdWVzdAk8PSAnMCc7CgkJCQlyZWZyZXNoQ291bnRlcgk8PSB4IjMyMCI7CQktLSA4dXMgQCAxMDBNaHoKCQkJCgkJCWVuZCBpZjsKCQkJCgkJZW5kIGlmOwoJCgllbmQgaWY7CgplbmQgcHJvY2VzczsKCnNkcmFtRGF0YUxhdGNoZXI6IHByb2Nlc3MoIGFsbCApCmJlZ2luCgogICAgaWYgcmlzaW5nX2VkZ2UoIHNkcmFtQ2xvY2tQcyApIHRoZW4KICAgIAogICAgICAgIHNkcmFtREluTGF0Y2hlZCA8PSBzZHJhbUQ7CiAgICAgICAgCiAgICBlbmQgaWY7CgplbmQgcHJvY2VzczsKCgpzZHJhbURNQU1haW46IHByb2Nlc3MoIGFsbCApCmJlZ2luCgogICAgaWYgcmVzZXQgPSAnMScgdGhlbgoKICAgICAgICBzZGNTdGF0ZSAgICAgICAgPD0gc2RjSW5pdDA7CiAgICAgICAgc2RjUmV0dXJuU3RhdGUgIDw9IHNkY0lkbGU7CgkJCiAgICAgICAgcmVzZXRDb3VudGVyICAgIDw9IHgiZmZmZiI7CiAgICAgICAgcmVmcmVzaERvbmUgICAgIDw9ICcwJzsKICAgICAgICAKICAgICAgICBzZHJhbUNLRSAgICAgICAgPD0gJzEnOwogICAgICAgIHNkcmFtRFFNICAgICAgICA8PSAoIG90aGVycyA9PiAnMScgKTsKICAgICAgICBzZHJhbUJhICAgICAgICAgPD0gIjExIjsKCQkKICAgICAgICBzZHJhbUEgICAgICAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgc2RyYW1EICAgICAgICAgIDw9ICggb3RoZXJzID0+ICdaJyApOwoJCQogICAgICAgIHNkcmFtQ1MgICAgICAgICA8PSAnMCc7CiAgICAgICAgc2RyYW1SQVMgICAgICAgIDw9ICcxJzsKICAgICAgICBzZHJhbUNBUyAgICAgICAgPD0gJzEnOwogICAgICAgIHNkcmFtV2UgICAgICAgICA8PSAnMSc7CgkJCiAgICAgICAgY2gwUmVhZHkgICAgICAgIDw9ICcwJzsKICAgICAgICBjaDBEb3V0ICAgICAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgIAogICAgICAgIGNoMURtYVJlYWR5ICAgICA8PSAnMSc7CiAgICAgICAgY2gxRG91dCAgICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAKICAgICAgICBjaDNEbWFSZXF1ZXN0TGF0Y2hlZCAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgICAgICBjaDNEbWFQb2ludGVyICAgICAgICAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKCiAgICAgICAgY2gzQnVmUmFtRGluICAgICAgICAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgY2gzQnVmUmFtV3JBICAgICAgICAgICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgY2gzQnVmUmFtV3IgICAgICAgICAgICAgPD0gJzAnOwogICAgICAgIGNoM1RyYW5zZmVyQ291bnRlciAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgICAgIGNoM0RtYUJ1ZlBvaW50ZXIgICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwoKICAgICAgICAKICAgIGVsc2UKICAgICAgICAKICAgICAgICBpZiByaXNpbmdfZWRnZSggc2RyYW1DbG9jayApIHRoZW4KCiAgICAgICAgICAgIC0tbGF0Y2ggY2gzIGRtYSByZXF1ZXN0cwogICAgICAgICAgICBpZiBjaDNEbWFSZXF1ZXN0KCAwICkgPSAnMScgdGhlbgogICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBjaDNEbWFSZXF1ZXN0TGF0Y2hlZCggMCApIDw9ICcxJzsKICAgICAgICAKICAgICAgICAgICAgZW5kIGlmOwogIAogICAgICAgICAgICBpZiBjaDNEbWFSZXF1ZXN0KCAxICkgPSAnMScgdGhlbgogICAgICAgICAgICAgCiAgICAgICAgICAgICAgICBjaDNEbWFSZXF1ZXN0TGF0Y2hlZCggMSApIDw9ICcxJzsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICBlbmQgaWY7CiAgICAgCiAgICAgICAgICAgICAtLXJlc2V0IGNoMyBkbWEgcG9pbnRlciBpZiByZXF1ZXN0ZWQKICAgICAgICAgICAgaWYgY2gzRG1hUG9pbnRlclJlc2V0ID0gJzEnIHRoZW4KICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgY2gzRG1hUG9pbnRlciAgPD0gY2gzRG1hUG9pbnRlclN0YXJ0OwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgIGVuZCBpZjsKICAgICAgICAKICAgICAgICAgICAgY2FzZSBzZGNTdGF0ZSBpcwoKICAgICAgICAgICAgICAgIHdoZW4gc2RjSWRsZSA9PgoKICAgICAgICAgICAgICAgICAgICBjaDBSZWFkeQk8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgY2gxRG1hUmVhZHkJPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAtLW5vcAogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV2UgICAgIDw9ICcxJzsJCgkJCQogICAgICAgICAgICAgICAgICAgIC0tY2hlY2sgcmVmcmVzaCByZXF1ZXN0CgogICAgICAgICAgICAgICAgICAgIGlmIHJlZnJlc2hSZXF1ZXN0ID0gJzEnIHRoZW4KCiAgICAgICAgICAgICAgICAgICAgICAgIC0tcmVmcmVzaCByZXF1ZXN0CgogICAgICAgICAgICAgICAgICAgICAgICBjaDBSZWFkeSAgICAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgLS1jYWxsIHJlZnJlc2gKICAgICAgICAgICAgICAgICAgICAgICAgc2RjUmV0dXJuU3RhdGUgIDw9IHNkY0lkbGU7CiAgICAgICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgICAgICA8PSBzZGNTdWJSZWZyZXNoMDsKCQkJCQkJCQkKICAgICAgICAgICAgICAgICAgICBlbHNlICAgIC0tcmVmcmVzaFJlcXVlc3QgPSAwCgogICAgICAgICAgICAgICAgICAgICAgICAtLW5vcm1hbCBvcGVyYXRpb24KCiAgICAgICAgICAgICAgICAgICAgICAgIC0tY2hlY2sgY2gzIGFjY2VzcwogICAgICAgICAgICAgICAgICAgICAgICBpZiBjaDNEbWFSZXF1ZXN0TGF0Y2hlZCggMCApID0gJzEnIHRoZW4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaDNEbWFCdWZQb2ludGVyICAgIDw9ICIwMDAwMDAwMDAiOyAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaDNUcmFuc2ZlckNvdW50ZXIgIDw9IHgiOWYiOyAgICAgICAgICAgLS0xNjAgbG9uZyB3b3JkcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICAgICAgICAgIDw9IHNkY0NoM1JlYWQwOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgZWxzaWYgY2gzRG1hUmVxdWVzdExhdGNoZWQoIDEgKSA9ICcxJyB0aGVuCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2gzRG1hQnVmUG9pbnRlciAgICA8PSAiMTAwMDAwMDAwIjsgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2gzVHJhbnNmZXJDb3VudGVyICA8PSB4IjlmIjsgICAgICAgICAgIC0tMTYwIGxvbmcgd29yZHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgICAgICAgICA8PSBzZGNDaDNSZWFkMDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAtLWNoZWNrIGNoMSBhY2Nlc3MKICAgICAgICAgICAgICAgICAgICAgICAgZWxzaWYgY2gxRG1hUmVxdWVzdCA9ICcxJyB0aGVuCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2gxRG1hUmVhZHkgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBjaDFEbWFXb3JkU2l6ZSA9ICcwJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLS0xNiBiaXQgdHJhbnNmZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXJvdyAvIGJhbmsgYWRkcmVzcyAoIGNoMSBhZHIgbWF4IGRvd250byA5ICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbUJBICAgICA8PSBjaDFBKCAyNCBkb3dudG8gMjMgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbUEgICAgICA8PSBjaDFBKCAyMiBkb3dudG8gMTAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgLS1jaDFEbWFXb3JkU2l6ZSA9ICcxJwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLTMyIGJpdCB0cmFuc2ZlcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLS1yb3cgLyBiYW5rIGFkZHJlc3MgKCBjcHUgYWRyIG1heCBkb3dudG8gOCApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1CQSAgICAgPD0gY2gxQSggMjMgZG93bnRvIDIyICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1BICAgICAgPD0gY2gxQSggMjEgZG93bnRvIDkgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kIGlmOyAtLWNoMURtYVdvcmRTaXplID0gJzAnIG9yICcxJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgLS1iYW5rL3JvdyBhY3RpdmF0aW9uCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1EUU0gICAgPD0gKCBvdGhlcnMgPT4gJzAnICk7CiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tcm93IHNlbGVjdCwgcmVhZCwgYXV0byBwcmVjaGFyZ2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbVdFICAgICA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgY2gxV3IgPSAnMScgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0td3JpdGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXB1dCBkYXRhIG9uIHNkcmFtIGRhdGEgYnVzCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgY2gxRG1hV29yZFNpemUgPSAnMCcgdGhlbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tMTYgYml0IGFjY2VzcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1EICAgICAgPD0gY2gxRGluKCAxNSBkb3dudG8gMCApICYgY2gxRGluKCAxNSBkb3dudG8gMCApOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tMzIgYml0IGFjY2VzcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1EICAgICAgPD0gY2gxRGluOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tc3dpdGNoIHRvIG5leHQgc3RhdGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlIDw9IHNkY0NoMVdyaXRlMDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSAtLWNoMVdyID0gJzAnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXJlYWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tc2RyYW0gZGF0YSBidXMgaW4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbUQgICAgICA8PSAoIG90aGVycyA9PiAnWicgKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLS1zd2l0Y2ggdG8gbmV4dCBzdGF0ZQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSA8PSBzZGNDaDFSZWFkMDsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmQgaWY7IC0tY2gxV3IgPSAnMScgb3IgJzAnCgogICAgICAgICAgICAgICAgICAgICAgICAtLWNoZWNrIGNoMCBhY2Nlc3MJCQkJCQogICAgICAgICAgICAgICAgICAgICAgICBlbHNpZiBjaDBDZSA9ICcxJyB0aGVuCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLS1yb3cgLyBiYW5rIGFkZHJlc3MgKCBjcHUgYWRyIG1heCBkb3dudG8gOSApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbUJBICAgICA8PSBjaDBBKCAyMyBkb3dudG8gMjIgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNkcmFtQSAgICAgIDw9IGNoMEEoIDIxIGRvd250byA5ICk7CiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAgICAgPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNkcmFtRFFNICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGNoMFdyID0gJzEnIHRoZW4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLS13cml0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLS1wdXQgZGF0YSBvbiBidXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZHJhbUQgICAgICA8PSBjaDBEaW47CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tcm93IHNlbGVjdCwgcmVhZCwgYXV0byBwcmVjaGFyZ2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNDaDBXcml0ZTA7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSAtLWNoMFdyID0gJzAnCiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXJlYWQgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLXNkcmFtIGRhdGEgYnVzIGluCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1EICAgICAgPD0gKCBvdGhlcnMgPT4gJ1onICk7ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjQ2gwUmVhZDA7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsgLS1jaDBXciA9ICcxJyBvciAnMCcKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgZW5kIGlmOyAtLWNoMENlID0gJzEnCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgZW5kIGlmOyAtLSByZWZyZXNoUmVxdWVzdCA9ICcxJyBvciAnMCcKCiAgICAgICAgICAgICAgICAtLWNoMSBibGl0dGVyICggMTYgLyAzMiBiaXQgKQogICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gxUmVhZDAgPT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNDaDFSZWFkMTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gxUmVhZDEgPT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNDaDFSZWFkMjsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gxUmVhZDIgPT4KCiAgICAgICAgICAgICAgICAgICAgLS1jb2x1bW4gc2VsZWN0LCByZWFkCgogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV0UgICAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgLS1hdXRvIHByZWNoYXJnZQoKICAgICAgICAgICAgICAgICAgICBzZHJhbUEoIDEyIGRvd250byA5ICkgICA8PSAiMDAxMCI7CgogICAgICAgICAgICAgICAgICAgIC0tY29sdW1uIGFkZHJlc3MgKCBib3RoIGNwdSBhbmQgc2RyYW0gYWRkcmVzc2VzIGFyZSBpbiBsb25nd29yZHMgKQogICAgICAgICAgICAgICAgICAgIC0tYTAtYTggLSBjb2x1bW4gYWRkcmVzcyAod29yZCkKICAgICAgICAgICAgICAgICAgICAtLWNwdSBhZGRyZXNzZXMgaW4gbG9uZ3dvcmRzCgogICAgICAgICAgICAgICAgICAgIGlmIGNoMURtYVdvcmRTaXplID0gJzAnIHRoZW4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIC0tMTYgYml0CiAgICAgICAgICAgICAgICAgICAgICAgIHNkcmFtQSggOCBkb3dudG8gMCApICAgIDw9IGNoMUEoIDkgZG93bnRvIDEgKTsKCiAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAtLTMyIGJpdAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1BKCA4IGRvd250byAwICkgICAgPD0gY2gxQSggOCBkb3dudG8gMCApOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNDaDFSZWFkMzsKCiAgICAgICAgICAgICAgICB3aGVuIHNkY0NoMVJlYWQzID0+CgogICAgICAgICAgICAgICAgICAgIC0tIGNhcyBsYXRlbmN5IDEKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNDaDFSZWFkNDsKCQkJCQogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDFSZWFkNCA9PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS0gY2FzIGxhdGVuY3kgMiAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAgICAgPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNDaDFSZWFkNTsKCiAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gxUmVhZDUgPT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tZGF0YSBsYXRjaCBsYXRlbmN5IAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAgICAgPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNDaDFSZWFkNjsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gxUmVhZDYgPT4gCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBpZiBjaDFEbWFXb3JkU2l6ZSA9ICcwJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAtLTE2IGJpdCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBpZiBjaDFBKCAwICkgPSAnMCcgdGhlbgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoMURvdXQgICAgIDw9IHgiMDAwMCIgJiBzZHJhbURJbkxhdGNoZWQoIDE1IGRvd250byAwICkgOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoMURvdXQgICAgIDw9IHgiMDAwMCIgJiBzZHJhbURJbkxhdGNoZWQoIDMxIGRvd250byAxNiApIDsKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgLS0zMiBiaXQKICAgICAgICAgICAgICAgICAgICAgICAgY2gxRG91dCAgICAgPD0gc2RyYW1ESW5MYXRjaGVkOwoKICAgICAgICAgICAgICAgICAgICBlbmQgaWY7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFICAgICA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgIC0tbm90aWZ5IGJsaXR0ZXIsIGRhdGEgaXMgcmVhZHkKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBjaDFEbWFSZWFkeSA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0NoMVJlYWQ3OwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDFSZWFkNyA9PiAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgaWYgY2gxRG1hUmVxdWVzdCA9ICcwJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlIDw9IHNkY0lkbGU7CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGVuZCBpZjsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gxV3JpdGUwID0+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLW5vcAogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMJPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV0UgCTw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjQ2gxV3JpdGUxOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDFXcml0ZTEgPT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNDaDFXcml0ZTI7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gxV3JpdGUyID0+CgogICAgICAgICAgICAgICAgICAgIC0td3JpdGUKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTCTw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFIAk8PSAnMCc7CgogICAgICAgICAgICAgICAgICAgIC0tYXV0byBwcmVjaGFyZ2UKCiAgICAgICAgICAgICAgICAgICAgc2RyYW1BKCAxMiBkb3dudG8gOSApICAgPD0gIjAwMTAiOwoKICAgICAgICAgICAgICAgICAgICBpZiBjaDFEbWFXb3JkU2l6ZSA9ICcwJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIC0tMTYgYml0CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAtLWNvbHVtbiBhZGRyZXNzICggY2gxIGFkZHIgaW4gd29yZHMsIHNkcmFtIGFkZHJlc3NlcyBpbiBsb25nd29yZHMgKQogICAgICAgICAgICAgICAgICAgICAgICAtLWEwLWE4IC0gY29sdW1uIGFkZHJlc3MgKCBsb25nIHdvcmQpCiAgICAgICAgICAgICAgICAgICAgICAgIC0tY2gxIGFkZHJlc3NlcyBpbiB3b3JkcwogICAgCiAgICAgICAgICAgICAgICAgICAgICAgIHNkcmFtQSggOCBkb3dudG8gMCApICAgIDw9IGNoMUEoIDkgZG93bnRvIDEgKTsKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGNoMUEoIDAgKSA9ICcwJyB0aGVuCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1EUU0gICAgPD0gIjExMDAiOyAgICAgIC0tZDE1IGRvd250byBkMAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNkcmFtRFFNICAgIDw9ICIwMDExIjsgICAgICAtLWQzMSBkb3dudG8gZDE2CgogICAgICAgICAgICAgICAgICAgICAgICBlbmQgaWY7CgogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgLS0zMiBiaXQKCiAgICAgICAgICAgICAgICAgICAgICAgIC0tY29sdW1uIGFkZHJlc3MgKCBib3RoIGNoMSBhbmQgc2RyYW0gYWRkcmVzc2VzIGFyZSBpbiBsb25nd29yZHMgKQogICAgICAgICAgICAgICAgICAgICAgICAtLWEwLWE4IC0gY29sdW1uIGFkZHJlc3MgKCBsb25nIHdvcmQpCiAgICAgICAgICAgICAgICAgICAgICAgIC0tY2gxIGFkZHJlc3NlcyBpbiBsb25nd29yZHMKICAgIAogICAgICAgICAgICAgICAgICAgICAgICBzZHJhbUEoIDggZG93bnRvIDAgKSAgICA8PSBjaDFBKCA4IGRvd250byAwICk7CiAgICAgICAgICAgICAgICAgICAgICAgIHNkcmFtRFFNICAgICAgICAgICAgICAgIDw9ICggb3RoZXJzID0+ICcwJyApOwogICAgCiAgICAgICAgICAgICAgICAgICAgZW5kIGlmOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0NoMVdyaXRlMzsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgd2hlbiBzZGNDaDFXcml0ZTMgPT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlIDw9IHNkY0NoMVdyaXRlNDsgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDFXcml0ZTQgPT4KICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLXNkcmFtIGRhdGEgYnVzIGluCiAgICAgICAgICAgICAgICAgICAgc2RyYW1EICAgICAgPD0gKCBvdGhlcnMgPT4gJ1onICk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtLW5vcAogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMJPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV0UgCTw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgPD0gc2RjQ2gxV3JpdGU1OyAgICAgICAgCgogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDFXcml0ZTUgPT4KCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTCTw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFIAk8PSAnMSc7CgoKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSA8PSBzZGNDaDFXcml0ZTY7ICAgICAgICAKCiAgICAgICAgICAgICAgICB3aGVuIHNkY0NoMVdyaXRlNiA9PgoKICAgICAgICAgICAgICAgICAgICAtLW5vdGlmeSBibGl0dGVyIHRoYXQgZGF0YSBoYXMgYmVlbiB3cml0dGVuCiAgICAgICAgICAgICAgICAgICAgY2gxRG1hUmVhZHkgPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAtLW5vcAogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMJPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV0UgCTw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgPD0gc2RjQ2gxV3JpdGU3OyAgICAgICAgCgogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDFXcml0ZTcgPT4gICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGlmIGNoMURtYVJlcXVlc3QgPSAnMCcgdGhlbgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSA8PSBzZGNJZGxlOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBlbmQgaWY7CgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgLS1jaDMgcGl4ZWxHZW5HZnggYnVmZmVyIGZldGNoICggMTYwIDMyLWJpdCB3b3JkcyApCgogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDNSZWFkMCA9PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1iYW5rL3JvdyBhY3RpdmF0aW9uCiAgICAKICAgICAgICAgICAgICAgICAgICBzZHJhbURRTSAgICA8PSAoIG90aGVycyA9PiAnMCcgKTsKICAgIAogICAgICAgICAgICAgICAgICAgIC0tc2RyYW0gZGF0YSBidXMgaW4KICAgICAgICAgICAgICAgICAgICBzZHJhbUQgICAgICA8PSAoIG90aGVycyA9PiAnWicgKTsKICAgIAogICAgICAgICAgICAgICAgICAgIC0tcm93IHNlbGVjdCwgcmVhZCwgYXV0byBwcmVjaGFyZ2UKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLXJvdyAvIGJhbmsgYWRkcmVzcyAoIGNwdSBhZHIgbWF4IGRvd250byA4ICkKICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHNkcmFtQkEgICAgIDw9IGNoM0RtYVBvaW50ZXIoIDIzIGRvd250byAyMiApOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQSAgICAgIDw9IGNoM0RtYVBvaW50ZXIoIDIxIGRvd250byA5ICk7CiAgICAKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFICAgICA8PSAnMSc7ICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0NoM1JlYWQxOwoKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gzUmVhZDEgPT4KIAogICAgICAgICAgICAgICAgICAgICAtLW5vcAogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMJPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV0UgCTw9ICcxJzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNDaDNSZWFkMjsKCiAgICAgICAgICAgICAgICB3aGVuIHNkY0NoM1JlYWQyID0+CgogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzEnOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNDaDNSZWFkMzsKCiAgICAgICAgICAgICAgICB3aGVuIHNkY0NoM1JlYWQzID0+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgLS1jb2x1bW4gc2VsZWN0LCByZWFkCgogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV0UgICAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgIGlmIGNoM1RyYW5zZmVyQ291bnRlciAvPSB4IjAwIiB0aGVuCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAtLWxlYXZlIHJvdyBvcGVuIAogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgc2RyYW1BKCAxMiBkb3dudG8gOSApICAgPD0gIjAwMDAiOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGVsc2UgLS1jaDNUcmFuc2Z0ZXJDb3VudGVyID09IDAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIC0tYXV0byBwcmVjaGFyZ2UKCiAgICAgICAgICAgICAgICAgICAgICAgIHNkcmFtQSggMTIgZG93bnRvIDkgKSAgIDw9ICIwMDEwIjsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBlbmQgaWY7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tY29sdW1uIGFkZHJlc3MgKCBib3RoIGNwdSBhbmQgc2RyYW0gYWRkcmVzc2VzIGFyZSBpbiBsb25nd29yZHMgKQogICAgICAgICAgICAgICAgICAgIC0tYTAtYTggLSBjb2x1bW4gYWRkcmVzcyAod29yZCkKICAgICAgICAgICAgICAgICAgICAtLWNwdSBhZGRyZXNzZXMgaW4gbG9uZ3dvcmRzCgogICAgICAgICAgICAgICAgICAgIHNkcmFtQSggOCBkb3dudG8gMCApICAgIDw9IGNoM0RtYVBvaW50ZXIoIDggZG93bnRvIDAgKTsKCiAgICAgICAgICAgICAgICAgICAgY2gzRG1hUG9pbnRlciAgICAgICAgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGNoM0RtYVBvaW50ZXIgKSArIDEgKTsKCiAgICAgICAgICAgICAgICAgICAgLS1wcmVwYXJlIGNoMyBidWYgYWRkcmVzcwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGNoM0J1ZlJhbVdyQSAgICAgICAgICAgIDw9IGNoM0RtYUJ1ZlBvaW50ZXI7CiAgICAgICAgICAgICAgICAgICAgY2gzRG1hQnVmUG9pbnRlciAgICAgICAgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGNoM0RtYUJ1ZlBvaW50ZXIgKSArIDEgKTsKCiAgICAgICAgICAgICAgICAgICAgY2gzQnVmUmFtV3IgICAgICAgICAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0NoM1JlYWQ0OwoKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gzUmVhZDQgPT4KCiAgICAgICAgICAgICAgICAgICAgLS1jYXMgbGF0ZW5jeSAxCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTCTw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFIAk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0NoM1JlYWQ1OwoKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gzUmVhZDUgPT4KCiAgICAgICAgICAgICAgICAgICAgLS1jYXMgbGF0ZW5jeSAyCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTCTw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFIAk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0NoM1JlYWQ2OwoKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gzUmVhZDYgPT4KCiAgICAgICAgICAgICAgICAgICAgLS1sYXRjaCBsYXRlbmN5CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTCTw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFIAk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0NoM1JlYWQ3OwoKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gzUmVhZDcgPT4KCiAgICAgICAgICAgICAgICAgICAgY2gzQnVmUmFtRGluICAgIDw9IHNkcmFtREluTGF0Y2hlZDsKICAgICAgICAgICAgICAgICAgICBjaDNCdWZSYW1XciAgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBpZiBjaDNUcmFuc2ZlckNvdW50ZXIgLz0geCIwMCIgdGhlbgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICBjaDNUcmFuc2ZlckNvdW50ZXIgIDw9IHN0ZF9sb2dpY192ZWN0b3IoIHVuc2lnbmVkKCBjaDNUcmFuc2ZlckNvdW50ZXIgKSAtIDEgKTsKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0NoM1JlYWQzOwogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0NoM1JlYWQ4OwogICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgZW5kIGlmOwogICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB3aGVuIHNkY0NoM1JlYWQ4ID0+CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTCTw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFIAk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgaWYgY2gzRG1hUmVxdWVzdExhdGNoZWQoIDAgKSA9ICcxJyB0aGVuCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGNoM0RtYVBvaW50ZXIgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIGNoM0RtYVBvaW50ZXIgKSArIHVuc2lnbmVkKCBjaDNEbWFSZXF1ZXN0ME1vZHVsbyApICk7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgZWxzZQoKICAgICAgICAgICAgICAgICAgICAgICAgY2gzRG1hUG9pbnRlciA8PSBzdGRfbG9naWNfdmVjdG9yKCB1bnNpZ25lZCggY2gzRG1hUG9pbnRlciApICsgdW5zaWduZWQoIGNoM0RtYVJlcXVlc3QxTW9kdWxvICkgKTsKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgZW5kIGlmOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGNoM0RtYVJlcXVlc3RMYXRjaGVkKCAwICkgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgY2gzRG1hUmVxdWVzdExhdGNoZWQoIDEgKSAgIDw9ICcwJzsKCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjQ2gzUmVhZDk7CgogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDNSZWFkOSA9PgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzEnOwogICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0lkbGU7CgoKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gwUmVhZDAgPT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzEnOwoKICAgIAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlIDw9IHNkY0NoMFJlYWQxOyAgICAgICAgCgogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDBSZWFkMSA9PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTCTw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFIAk8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlIDw9IHNkY0NoMFJlYWQyOyAgICAgICAgCgogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDBSZWFkMiA9PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1jb2x1bW4gc2VsZWN0LCByZWFkCgogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV0UgICAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgLS1hdXRvIHByZWNoYXJnZQoKICAgICAgICAgICAgICAgICAgICBzZHJhbUEoIDEyIGRvd250byA5ICkgICA8PSAiMDAxMCI7CgogICAgICAgICAgICAgICAgICAgIC0tY29sdW1uIGFkZHJlc3MgKCBib3RoIGNwdSBhbmQgc2RyYW0gYWRkcmVzc2VzIGFyZSBpbiBsb25nd29yZHMgKQogICAgICAgICAgICAgICAgICAgIC0tYTAtYTggLSBjb2x1bW4gYWRkcmVzcyAod29yZCkKICAgICAgICAgICAgICAgICAgICAtLWNwdSBhZGRyZXNzZXMgaW4gbG9uZ3dvcmRzCgogICAgICAgICAgICAgICAgICAgIHNkcmFtQSggOCBkb3dudG8gMCApICAgIDw9IGNoMEEoIDggZG93bnRvIDAgKTsKCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgPD0gc2RjQ2gwUmVhZDM7ICAgICAgICAKCiAgICAgICAgICAgICAgICB3aGVuIHNkY0NoMFJlYWQzID0+CgogICAgICAgICAgICAgICAgICAgIC0tIGNhcyBsYXRlbmN5IDEKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICAgICAgICAgICAgICA8PSBzZGNDaDBSZWFkNDsKCQkJCQogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDBSZWFkNCA9PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS0gY2FzIGxhdGVuY3kgMiAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAgICAgPD0gJzEnOwoKCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjQ2gwUmVhZDU7CgogICAgICAgICAgICAgICB3aGVuIHNkY0NoMFJlYWQ1ID0+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLWRhdGEgbGF0Y2ggbGF0ZW5jeSAKICAgICAgICAgICAgICAgICAgICAtLW5vcAogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV0UgICAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjQ2gwUmVhZDY7CgogICAgICAgICAgICAgICAgd2hlbiBzZGNDaDBSZWFkNiA9PgoKICAgICAgICAgICAgICAgICAgICBjaDBEb3V0ICAgICA8PSBzZHJhbURJbkxhdGNoZWQ7CgogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAgICAgPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICAtLW5vdGlmeSBDUFUsIGRhdGEgaXMgcmVhZHkKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBjaDBSZWFkeSAgICA8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY0NoMFJlYWQ3OwoKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gwUmVhZDcgPT4KCiAgICAgICAgICAgICAgICAgICAgaWYgY2gwQ0UgPSAnMCcgdGhlbgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGNoMFJlYWR5ICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjSWRsZTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICBlbmQgaWY7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICB3aGVuIHNkY0NoMFdyaXRlMCA9PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTCTw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFIAk8PSAnMSc7CiAgICAKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSA8PSBzZGNDaDBXcml0ZTE7ICAgICAgICAKCiAgICAgICAgICAgICAgICB3aGVuIHNkY0NoMFdyaXRlMSA9PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTCTw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFIAk8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlIDw9IHNkY0NoMFdyaXRlMjsgICAgICAgIAoKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gwV3JpdGUyID0+CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLXdyaXRlCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzAnOwoKICAgICAgICAgICAgICAgICAgICAtLWF1dG8gcHJlY2hhcmdlCgogICAgICAgICAgICAgICAgICAgIHNkcmFtQSggMTIgZG93bnRvIDkgKSAgIDw9ICIwMDEwIjsKCiAgICAgICAgICAgICAgICAgICAgLS1jb2x1bW4gYWRkcmVzcyAoIGJvdGggY3B1IGFuZCBzZHJhbSBhZGRyZXNzZXMgYXJlIGluIGxvbmd3b3JkcyApCiAgICAgICAgICAgICAgICAgICAgLS1hMC1hOCAtIGNvbHVtbiBhZGRyZXNzICh3b3JkKQogICAgICAgICAgICAgICAgICAgIC0tY3B1IGFkZHJlc3NlcyBpbiBsb25nd29yZHMKCiAgICAgICAgICAgICAgICAgICAgc2RyYW1BKCA4IGRvd250byAwICkgICAgPD0gY2gwQSggOCBkb3dudG8gMCApOwogICAgICAgICAgICAgICAgICAgIAoKICAgICAgICAgICAgICAgICAgICBzZHJhbURRTSggMCApIDw9IG5vdCBjaDBEYXRhTWFzayggMCApOwogICAgICAgICAgICAgICAgICAgIHNkcmFtRFFNKCAxICkgPD0gbm90IGNoMERhdGFNYXNrKCAxICk7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1EUU0oIDIgKSA8PSBub3QgY2gwRGF0YU1hc2soIDIgKTsKICAgICAgICAgICAgICAgICAgICBzZHJhbURRTSggMyApIDw9IG5vdCBjaDBEYXRhTWFzayggMyApOwoKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSA8PSBzZGNDaDBXcml0ZTM7ICAgICAgICAKCiAgICAgICAgICAgICAgICB3aGVuIHNkY0NoMFdyaXRlMyA9PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTCTw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFIAk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgPD0gc2RjQ2gwV3JpdGU0OyAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB3aGVuIHNkY0NoMFdyaXRlNCA9PgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tc2RyYW0gZGF0YSBidXMgaW4KICAgICAgICAgICAgICAgICAgICBzZHJhbUQgICAgICA8PSAoIG90aGVycyA9PiAnWicgKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUwk8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XRSAJPD0gJzEnOwoKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSA8PSBzZGNDaDBXcml0ZTU7ICAgICAgICAKCiAgICAgICAgICAgICAgICB3aGVuIHNkY0NoMFdyaXRlNSA9PgoKICAgICAgICAgICAgICAgICAgICAtLW5vcAogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMJPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV0UgCTw9ICcxJzsKCgogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlIDw9IHNkY0NoMFdyaXRlNjsgICAgICAgIAoKICAgICAgICAgICAgICAgIHdoZW4gc2RjQ2gwV3JpdGU2ID0+CgogICAgICAgICAgICAgICAgICAgIC0tbm90aWZ5IGNwdSB0aGF0IGRhdGEgaGFzIGJlZW4gd3JpdHRlbgogICAgICAgICAgICAgICAgICAgIGNoMFJlYWR5ICAgIDw9ICcxJzsKCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTCTw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdFIAk8PSAnMSc7CgogICAgICAgICAgICAgICAgICAgIGlmIGNoMENFID0gJzAnIHRoZW4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIGNoMFJlYWR5ICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjSWRsZTsKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgZW5kIGlmOwoKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjSW5pdDAgPT4KCiAgICAgICAgICAgICAgICAgICAgaWYgcmVzZXRDb3VudGVyIC89IHgiMDAwMCIgdGhlbgogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICByZXNldENvdW50ZXIgPD0gc3RkX2xvZ2ljX3ZlY3RvciggdW5zaWduZWQoIHJlc2V0Q291bnRlciApIC0gMSApOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgPD0gc2RjSW5pdDE7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgZW5kIGlmOwoJCQkKICAgICAgICAgICAgICAgIHdoZW4gc2RjSW5pdDEgPT4KICAgIAogICAgICAgICAgICAgICAgICAgIC0tcHJlY2hhcmdlIGFsbCBiYW5rcwogICAgCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTICAgICAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XZSAgICAgICAgIDw9ICcwJzsKICAgIAogICAgICAgICAgICAgICAgICAgIHNkcmFtQkEgICAgICAgICA8PSAiMDAiOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQSggMTAgKSAgICA8PSAnMSc7CiAgICAKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICAgICAgPD0gc2RjSW5pdDI7CiAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjSW5pdDIgPT4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XZSAgICAgPD0gJzEnOwogICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAtLWNhbGwgcmVmcmVzaAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgICAgICA8PSBzZGNTdWJSZWZyZXNoMDsKICAgICAgICAgICAgICAgICAgICBzZGNSZXR1cm5TdGF0ZSAgPD0gc2RjSW5pdDM7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB3aGVuIHNkY0luaXQzID0+CiAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdlICAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLS1jYWxsIHJlZnJlc2gKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICAgICAgPD0gc2RjU3ViUmVmcmVzaDA7CiAgICAgICAgICAgICAgICAgICAgc2RjUmV0dXJuU3RhdGUgIDw9IHNkY0luaXQ0OwogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB3aGVuIHNkY0luaXQ0ID0+CiAgICAKICAgICAgICAgICAgICAgICAgICAtLW1vZGUgcmVnaXN0ZXIgc2V0CiAgICAKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdlICAgICA8PSAnMCc7CiAgICAKICAgICAgICAgICAgICAgICAgICBzZHJhbUJhICAgICA8PSAiMDAiOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tYnVyc3QgbGVuZ2h0ID0gMQogICAgICAgICAgICAgICAgICAgIC0tYWRkcmVzc2luZyBtb2RlID0gc2VxdWVudGlhbAogICAgICAgICAgICAgICAgICAgIC0tY2FzIGxhdGVuY3kgPSAyCiAgICAgICAgICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgICAgICAgICBzZHJhbUEgICAgICA8PSAgIjAwMCIgJiAnMCcgJiAiMDAiICYgIjAxMCIgJiAnMCcgJiAiMDAwIjsKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNJbml0NTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjSW5pdDUgPT4KICAgIAogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZGNTdGF0ZSAgICA8PSBzZGNJbml0NjsKICAgIAogICAgICAgICAgICAgICAgd2hlbiBzZGNJbml0NiA9PgogICAgCiAgICAgICAgICAgICAgICAgICAgLS1ub3AKICAgICAgICAgICAgICAgICAgICBzZHJhbUNTICAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1SQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtQ0FTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVdlICAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjSWRsZTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIC0tcmVmcmVzaCBzdWJyb3V0aW5lCiAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjU3ViUmVmcmVzaDAgPT4KICAgIAogICAgICAgICAgICAgICAgICAgIC0tYXV0byByZWZyZXNoCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUyAgICA8PSAnMCc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XZSAgICAgPD0gJzEnOwogICAgCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjU3ViUmVmcmVzaDE7CiAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjU3ViUmVmcmVzaDEgPT4KICAgIAogICAgICAgICAgICAgICAgICAgIC0tY2xlYXIgcmVmcmVzaENvdW50ZXIKICAgIAogICAgICAgICAgICAgICAgICAgIHJlZnJlc2hEb25lCQk8PSAnMSc7CiAgICAKICAgICAgICAgICAgICAgICAgICAtLW5vcAogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV2UgICAgIDw9ICcxJzsKICAgIAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY1N1YlJlZnJlc2gyOwogICAgCiAgICAgICAgICAgICAgICB3aGVuIHNkY1N1YlJlZnJlc2gyID0+CiAgICAKICAgICAgICAgICAgICAgICAgICAtLW5vcAogICAgICAgICAgICAgICAgICAgIHNkcmFtQ1MgICAgIDw9ICcwJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbVJBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1DQVMgICAgPD0gJzEnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtV2UgICAgIDw9ICcxJzsKICAgIAogICAgICAgICAgICAgICAgICAgIHNkY1N0YXRlICAgIDw9IHNkY1N1YlJlZnJlc2gzOwogICAgCiAgICAgICAgICAgICAgICB3aGVuIHNkY1N1YlJlZnJlc2gzID0+CiAgICAKICAgICAgICAgICAgICAgICAgICByZWZyZXNoRG9uZQkJPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XZSAgICAgPD0gJzEnOwogICAgCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjU3ViUmVmcmVzaDQ7CiAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjU3ViUmVmcmVzaDQgPT4KICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XZSAgICAgPD0gJzEnOwogICAgCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjU3ViUmVmcmVzaDU7CiAgICAKICAgICAgICAgICAgICAgIHdoZW4gc2RjU3ViUmVmcmVzaDUgPT4KICAgIAogICAgICAgICAgICAgICAgICAgIC0tbm9wCiAgICAgICAgICAgICAgICAgICAgc2RyYW1DUyAgICAgPD0gJzAnOwogICAgICAgICAgICAgICAgICAgIHNkcmFtUkFTICAgIDw9ICcxJzsKICAgICAgICAgICAgICAgICAgICBzZHJhbUNBUyAgICA8PSAnMSc7CiAgICAgICAgICAgICAgICAgICAgc2RyYW1XZSAgICAgPD0gJzEnOwogICAgCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUgICAgPD0gc2RjUmV0dXJuU3RhdGU7CiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB3aGVuIG90aGVycyA9PgogICAgCiAgICAgICAgICAgICAgICAgICAgc2RjU3RhdGUJPD0gc2RjSWRsZTsKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgZW5kIGNhc2U7IC0tc2RjU3RhdGUgaXMKICAgICAgICAKICAgICAgICAKICAgICAgICAKICAgICAgICBlbmQgaWY7IC0tcmlzaW5nX2VkZ2UoIHNkcmFtQ2xvY2sgKQogICAgICAgIAogICAgZW5kIGlmOyAtLXJlc2V0ID0gJzEnIG9yICcwJwoKZW5kIHByb2Nlc3M7CgoKLS1wbGFjZSBnZnggYnVmIHJhbSAoIGNoMyApCmdmeEJ1ZlJhbUluc3Q6Z2Z4QnVmUmFtCnBvcnQgbWFwKCAKICAgIGNsa2EgICAgPT4gY2gzQnVmQ2xrLAogICAgd2VhKDApICA9PiAnMCcsCiAgICBhZGRyYSAgID0+IGNoM0J1ZkEsCiAgICBkaW5hICAgID0+ICggb3RoZXJzID0+ICcwJyApLAogICAgZG91dGEgICA9PiBjaDNCdWZEb3V0LAoKICAgIGNsa2IgICAgPT4gc2RyYW1DbG9jaywKICAgIHdlYigwKSAgPT4gY2gzQnVmUmFtV3IsCiAgICBhZGRyYiAgID0+IGNoM0J1ZlJhbVdyQSwKICAgIGRpbmIgICAgPT4gY2gzQnVmUmFtRGluCiAgICAtLWRvdXRiICAgPT4gCiAgKTsKCgplbmQgQmVoYXZpb3JhbDsKAAAAAAAAAADqqAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZpAAAAAAAABmkAAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					5,
					"right_delete",
					null,
					"BQAAAFmQAAAAAAAAWZAAAAAAAAAEAAAAICAgIFmQAAAAAAAAWZAAAAAAAAAEAAAAICAgIFmQAAAAAAAAWZAAAAAAAAAEAAAAICAgIFmQAAAAAAAAWZAAAAAAAAAEAAAAICAgIFmQAAAAAAAAWZAAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAWZAAAAAAAABZkAAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "\n-- "
					},
					"AwAAAFmQAAAAAAAAWpAAAAAAAAAAAAAAWpAAAAAAAABukAAAAAAAAAAAAABukAAAAAAAAHGQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWZAAAAAAAABZkAAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					3,
					"left_delete",
					null,
					"AwAAAHCQAAAAAAAAcJAAAAAAAAABAAAAIG+QAAAAAAAAb5AAAAAAAAABAAAALW6QAAAAAAAAbpAAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAcZAAAAAAAABxkAAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					5,
					"right_delete",
					null,
					"BQAAAJxgAAAAAAAAnGAAAAAAAAAEAAAAICAgIJxgAAAAAAAAnGAAAAAAAAAEAAAAICAgIJxgAAAAAAAAnGAAAAAAAAAEAAAAICAgIJxgAAAAAAAAnGAAAAAAAAAEAAAAICAgIJxgAAAAAAAAnGAAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAnGAAAAAAAACcYAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				"Clean"
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/make run.sublime-build",
					""
				],
				[
					"Packages/User/make send.sublime-build",
					""
				]
			],
			[
				"Packages/User/make run.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/make send.sublime-build",
					""
				]
			],
			[
				"Packages/User/make send.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/make run.sublime-build",
					""
				],
				[
					"Packages/User/make send.sublime-build",
					""
				]
			],
			[
				"Packages/User/make send.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/User/make send.sublime-build",
					""
				]
			],
			[
				"Packages/User/make send.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Enable Package"
			],
			[
				"package control: install package",
				"Package Control: Install Package"
			],
			[
				"install package control",
				"Install Package Control"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 141.0,
		"history":
		[
			"help",
			"dir",
			"dire"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/tangerineA7_200.srcs/sources_1",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/tangerineA7_200.srcs/sources_1/new"
	],
	"file_history":
	[
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/tangerineA7_200.srcs/sources_1/new/nekoRv.vhd",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/tangerineA7_200.srcs/sources_1/new/usbHost.vhd",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/spiSdCardRegs.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/tgVideoOut.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/tangerine.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/emul.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/main.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/memio.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/emul.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/sdCard.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/tangerine.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/memio.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/srec.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/sdCard.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/disasm.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/gfTypes.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/disasm.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/usbHost.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/usbHostRegs.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/usbHostRegs.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/usbHost.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/tgVideoOut.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/rootRegs.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/rootRegs.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/sdramDmaRegs.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/sdramDmaRegs.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/spiSdCardRegs.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/srec.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/Makefile",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/spiSDCardRegs.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/spiSDCardRegs.cpp",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/sdramDma.h",
		"/F/msys64/home/qubec/ProjektyGCCWindows/tangerineSOCEmulator/sdramDma.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/Software/slideshow/main.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/Software/slideshow/ram.ld",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/Software/slideshow/Makefile",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/Software/gfxLib/bsp.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/Software/gfxLib/gfBitmap.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/Software/gfxLib/gfBitmap.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/Software/gfxLib/gfTypes.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/A7BaseBoard/tangerineA7_200/Software/gfxLib/bsp.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/TangNano20K/tangyRiscVSOC/tangyRiscVSOC/src/software/gfxLib/diskio.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/TangNano20K/tangyRiscVSOC/tangyRiscVSOC/src/software/gfxLib/gfBitmap.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/TangNano20K/tangyRiscVSOC/tangyRiscVSOC/src/software/gfxLib/bsp.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/TangNano20K/tangyRiscVSOC/tangyRiscVSOC/src/software/gfxLib/bsp.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/TangNano20K/tangyRiscVSOC/tangyRiscVSOC/src/software/gfxLib/gfTypes.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/TangNano20K/tangyRiscVSOC/tangyRiscVSOC/src/software/slideshow/Makefile",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/TangNano20K/tangyRiscVSOC/tangyRiscVSOC/src/software/slideshow/ram.ld",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/TangNano20K/tangyRiscVSOC/tangyRiscVSOC/src/software/slideshow/startup.S",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscVSOCQ13/sramController.vhd",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscVSOCQ13/software/gfxLib/osFile.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscVSOCQ13/software/gfxLib/bsp.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscVSOCQ13/software/gfxLib/bsp.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscVSOCQ13/software/slideshow/startup.S",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscVSOCQ13/software/gfxLib/diskio.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscVSOCQ13/software/slideshow/Makefile",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscVSOCQ13/software/slideshow/main.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscVSOCQ13/software/gfxLib/diskio.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscVSOCQ13/C4RiscVSOCTop.vhd",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/osUIEvents.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/usbHID.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/bsp.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/bsp.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/gfFont.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/gfFont.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/gfDrawing.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/gfJPEG.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/gfBitmap.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLibSlideshow/ram.ld",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/gfBitmap.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/gfDrawing.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLibSlideshow/main.cpp",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLibSlideshow/startup.S",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLibSlideshow/main.h",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLib/picojpeg.cpp",
		"/C/Users/qubec/AppData/Roaming/Sublime Text/Packages/User/make send.sublime-build",
		"/C/Users/qubec/AppData/Roaming/Sublime Text/Packages/User/Preferences.sublime-settings",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLibSlideshow/slideshowProject.sublime-project",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/gfxLibSlideshow/Makefile",
		"/C/Users/qubec/Documents/Development/ProjektyVHDL/C4BaseBoard/RiscV/usbHidTest/main.cpp"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"sdcCh3Read9",
			"sdcCh1Read7",
			"sdcCh1Write8",
			"sdcCh1Read8",
			"sdcCh0Write7",
			"0110011"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": true,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "tangerineA7_200.srcs/sources_1/new/blitter.vhd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37006,
						"regions":
						{
						},
						"selection":
						[
							[
								578,
								578
							]
						],
						"settings":
						{
							"syntax": "Packages/VHDL Mode/Syntax/VHDL.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 286.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tangerineA7_200.srcs/sources_1/new/sdramDMA.vhd",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43223,
						"regions":
						{
						},
						"selection":
						[
							[
								24732,
								24732
							]
						],
						"settings":
						{
							"syntax": "Packages/VHDL Mode/Syntax/VHDL.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8384.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 219.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "tangerineA7_200_sublime.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"F:\\msys64\\home\\qubec\\ProjektyGCCWindows\\tangerineSOCEmulator\\tangerine.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 177.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
